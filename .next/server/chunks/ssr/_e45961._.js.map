{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/api.ts"],"sourcesContent":["/**\n * API client for the Child Welfare Case Management System\n */\n\n// Use the direct Cloud Run service for local development\nconst API_BASE_URL = 'https://ccwis-core-case-mgmt-807576987550.us-central1.run.app'\n\nexport interface ApiResponse<T> {\n  data?: T\n  error?: string\n}\n\nexport interface Case {\n  case_id: string\n  case_number: string\n  case_display_name: string\n  status: string\n  priority_level: string\n  primary_child: string\n  family_name: string\n  allegation_type: string\n  allegation_description: string\n  county: string\n  created_date: string\n  last_updated: string\n  created_by: string\n  assigned_worker?: string\n  assigned_supervisor?: string\n  workflow_status: {\n    current_stage: string\n    cpw_reviewed: boolean\n    cpw_supervisor_approved: boolean\n    swcm_assigned: boolean\n  }\n  risk_level?: string\n  safety_factors?: string[]\n  safety_assessment_due?: string\n  assessment_notes?: string\n  persons?: Person[]\n  timeline_events?: TimelineEvent[]\n  case_notes?: CaseNote[]\n  documents?: Document[]\n  address?: {\n    street_address?: string\n    city?: string\n    state?: string\n    zipcode?: number\n  }\n}\n\nexport interface Person {\n  person_id: string\n  first_name: string\n  last_name: string\n  date_of_birth: string\n  role: string\n  contact_info: {\n    phone?: string\n    email?: string\n    address?: string\n  }\n  indicators?: string[]\n  relationship_to_primary_child?: string\n}\n\nexport interface TimelineEvent {\n  event_id: string\n  event_type: string\n  title: string\n  description: string\n  date: string\n  created_by: string\n  priority?: string\n}\n\nexport interface CaseNote {\n  note_id: string\n  text: string\n  created_by: string\n  created_date: string\n  note_type?: string\n  genai_summary?: string\n}\n\nexport interface Document {\n  document_id: string\n  title: string\n  type: string\n  uploaded_date: string\n  uploaded_by: string\n  file_size?: string\n  description?: string\n}\n\nclass ApiClient {\n  private baseUrl: string\n\n  constructor(baseUrl: string = API_BASE_URL) {\n    this.baseUrl = baseUrl\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    try {\n      const url = `${this.baseUrl}${endpoint}`\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        return {\n          error: errorData.error || `HTTP ${response.status}: ${response.statusText}`,\n        }\n      }\n\n      const data = await response.json()\n      return { data }\n    } catch (error) {\n      return {\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      }\n    }\n  }\n\n  // SWCM Supervisor endpoints\n  async getCasesPendingAssignment(): Promise<ApiResponse<{ cases: Case[] }>> {\n    return this.request<{ cases: Case[] }>('/swcm/cases/pending-assignment')\n  }\n\n  async assignCaseToSWCM(\n    caseId: string,\n    assignedWorker: string,\n    assignedSupervisor?: string\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/swcm/cases/${caseId}/assign`, {\n      method: 'POST',\n      body: JSON.stringify({\n        assigned_worker: assignedWorker,\n        assigned_supervisor: assignedSupervisor,\n      }),\n    })\n  }\n\n  // SWCM Worker endpoints\n  async getCasesByWorker(workerName: string): Promise<ApiResponse<{ cases: Case[] }>> {\n    return this.request<{ cases: Case[] }>(`/cases?assigned_worker=${encodeURIComponent(workerName)}`)\n  }\n\n  async getCaseById(caseId: string): Promise<ApiResponse<Case>> {\n    return this.request<Case>(`/cases/${caseId}`)\n  }\n\n  async getPersonsByCase(caseId: string): Promise<ApiResponse<{ persons: Person[] }>> {\n    return this.request<{ persons: Person[] }>(`/cases/${caseId}/persons`)\n  }\n\n  async getCaseNotes(caseId: string): Promise<ApiResponse<{ notes: CaseNote[] }>> {\n    return this.request<{ notes: CaseNote[] }>(`/cases/${caseId}/notes`)\n  }\n\n  async addCaseNote(\n    caseId: string,\n    noteText: string,\n    noteType?: string\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/cases/${caseId}/notes`, {\n      method: 'POST',\n      body: JSON.stringify({\n        note_text: noteText,\n        note_type: noteType || 'General',\n      }),\n    })\n  }\n\n  async updateCase(\n    caseId: string,\n    updates: Partial<Case>\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/cases/${caseId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    })\n  }\n\n  // Person search\n  async searchPersons(query: string): Promise<ApiResponse<{ persons: Person[] }>> {\n    return this.request<{ persons: Person[] }>(`/persons/search?q=${encodeURIComponent(query)}`)\n  }\n\n  // Get person by ID\n  async getPersonById(personId: string): Promise<ApiResponse<Person>> {\n    return this.request<Person>(`/persons/${personId}`)\n  }\n\n  // Health check\n  async healthCheck(): Promise<ApiResponse<{ status: string; service: string }>> {\n    return this.request<{ status: string; service: string }>('/health')\n  }\n}\n\n// Export singleton instance\nexport const apiClient = new ApiClient()\n\n// Export individual functions for convenience\nexport const getCasesPendingAssignment = () => apiClient.getCasesPendingAssignment()\nexport const assignCaseToSWCM = (caseId: string, assignedWorker: string, assignedSupervisor?: string) => \n  apiClient.assignCaseToSWCM(caseId, assignedWorker, assignedSupervisor)\nexport const getCasesByWorker = (workerName: string) => apiClient.getCasesByWorker(workerName)\nexport const getCaseById = (caseId: string) => apiClient.getCaseById(caseId)\nexport const getPersonsByCase = (caseId: string) => apiClient.getPersonsByCase(caseId)\nexport const getCaseNotes = (caseId: string) => apiClient.getCaseNotes(caseId)\nexport const addCaseNote = (caseId: string, noteText: string, noteType?: string) => \n  apiClient.addCaseNote(caseId, noteText, noteType)\nexport const updateCase = (caseId: string, updates: Partial<Case>) => \n  apiClient.updateCase(caseId, updates)\nexport const searchPersons = (query: string) => apiClient.searchPersons(query)\nexport const getPersonById = (personId: string) => apiClient.getPersonById(personId)\nexport const healthCheck = () => apiClient.healthCheck()\n\n// Magic Button data interface based on BigQuery schema\nexport interface MagicButtonData {\n  incident_number: string\n  child_first_names: string\n  child_last_names: string\n  parent_first_names: string\n  parent_last_names: string\n  cps_worker: string\n  due_date: string\n  county_of_assessment: string\n  intake_date: string\n  reported_native_american_heritage: string\n  perpetrators: string\n  perpetrator_first_name: string\n  perpetrator_last_name: string\n  findings: string\n  allegations: string\n  victims: string\n  victim_first_name: string\n  victim_last_name: string\n  person_id: string\n  role: string\n  gender: string\n  age_calculated: number\n  prior_workers: string\n  current_address: string\n  address_type: string\n  residence_county: string\n  date_of_birth: string\n  phone_number: string\n  phone_type: string\n  address: string\n  city: string\n  state: string\n  zip_code: number\n  non_custodial_parent: boolean\n  non_custodial_parent_person_id: string\n  non_custodial_parent_first_name: string\n  non_custodial_parent_last_name: string\n  non_custodial_parent_middle_name: string\n  non_custodial_parent_dob: string\n  non_custodial_parent_ssn: string\n  non_custodial_parent_suffix: string\n  non_custodial_parent_sex: string\n  non_custodial_parent_race: string\n  non_custodial_parent_ethnicity: string\n  legal_custodian: string\n  guardian: string\n  prior_assessment: string\n  type_of_appointment: string\n  clinic_name: string\n  appointment_date: string\n}\n\n// Search Magic Button data by incident number (mock implementation for now)\nexport const searchMagicButtonData = async (query: string): Promise<ApiResponse<{ incidents: MagicButtonData[] }>> => {\n  // Mock implementation - replace with real API call when backend is ready\n  await new Promise(resolve => setTimeout(resolve, 400))\n  \n  // Mock data for development\n  const mockIncidents: MagicButtonData[] = [\n    {\n      incident_number: \"INC-2024-001234\",\n      child_first_names: \"Emma\",\n      child_last_names: \"Johnson\", \n      parent_first_names: \"Michael, Sarah\",\n      parent_last_names: \"Johnson, Johnson\",\n      cps_worker: \"Dana Wilson\",\n      due_date: \"2024-09-15\",\n      county_of_assessment: \"King County\",\n      intake_date: \"2024-08-15\",\n      reported_native_american_heritage: \"No\",\n      perpetrators: \"Michael Johnson\",\n      perpetrator_first_name: \"Michael\",\n      perpetrator_last_name: \"Johnson\",\n      findings: \"Substantiated\",\n      allegations: \"Physical abuse\",\n      victims: \"Emma Johnson\",\n      victim_first_name: \"Emma\", \n      victim_last_name: \"Johnson\",\n      person_id: \"12345\",\n      role: \"Client\",\n      gender: \"Female\",\n      age_calculated: 8,\n      prior_workers: \"None\",\n      current_address: \"123 Main St\",\n      address_type: \"Residential\",\n      residence_county: \"King County\",\n      date_of_birth: \"2016-03-12\",\n      phone_number: \"206-555-0123\",\n      phone_type: \"Home\",\n      address: \"123 Main St\",\n      city: \"Seattle\",\n      state: \"WA\",\n      zip_code: 98101,\n      non_custodial_parent: false,\n      non_custodial_parent_person_id: \"\",\n      non_custodial_parent_first_name: \"\",\n      non_custodial_parent_last_name: \"\",\n      non_custodial_parent_middle_name: \"\",\n      non_custodial_parent_dob: \"\",\n      non_custodial_parent_ssn: \"\",\n      non_custodial_parent_suffix: \"\",\n      non_custodial_parent_sex: \"\",\n      non_custodial_parent_race: \"\",\n      non_custodial_parent_ethnicity: \"\",\n      legal_custodian: \"Sarah Johnson\",\n      guardian: \"\",\n      prior_assessment: \"None\",\n      type_of_appointment: \"\",\n      clinic_name: \"\",\n      appointment_date: \"\"\n    }\n  ]\n  \n  if (!query || query.length < 2) {\n    return { data: { incidents: [] }, error: undefined }\n  }\n  \n  const filteredIncidents = mockIncidents.filter(incident => \n    incident.incident_number.toLowerCase().includes(query.toLowerCase()) ||\n    incident.child_first_names.toLowerCase().includes(query.toLowerCase()) ||\n    incident.child_last_names.toLowerCase().includes(query.toLowerCase()) ||\n    incident.allegations.toLowerCase().includes(query.toLowerCase())\n  )\n  \n  return { data: { incidents: filteredIncidents }, error: undefined }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/TaskTable.tsx"],"sourcesContent":["'use client'\n\nimport { Case } from '../lib/api'\nimport Link from 'next/link'\n\ninterface TaskTableProps {\n  taskType: string\n  cases: Case[]\n  onActionClick: (case_: Case) => void\n}\n\n// Configuration for different task types\nconst taskConfigs = {\n  'request-assignment': {\n    title: 'Ready to Request SWCM Assignment',\n    columns: ['Incident Number', 'Intake Date', 'Key Allegation', 'Actions'],\n    actionButton: { text: 'Request Assignment', icon: 'assignment_ind', className: 'primary' }\n  },\n  'edits-required': {\n    title: 'Edits Required',\n    columns: ['Case Name', 'Last Updated', 'Supervisor Note', 'Actions'],\n    actionButton: { text: 'View & Edit', icon: 'edit', className: 'error' }\n  },\n  'case-setup': {\n    title: 'Ready for Setup',\n    columns: ['Case Name', 'Assigned SWCM', 'Setup Progress', 'Actions'],\n    actionButton: { text: 'Start Setup', icon: 'settings', className: 'secondary' }\n  }\n}\n\nexport default function TaskTable({ taskType, cases, onActionClick }: TaskTableProps) {\n  const config = taskConfigs[taskType as keyof typeof taskConfigs]\n  \n  if (!config) {\n    return (\n      <div className=\"task-table-container\">\n        <div className=\"error-message\">\n          <span className=\"icon\">error</span>\n          Unknown task type: {taskType}\n        </div>\n      </div>\n    )\n  }\n\n  const renderCellContent = (case_: Case, columnIndex: number) => {\n    switch (taskType) {\n      case 'request-assignment':\n        switch (columnIndex) {\n          case 0: // Incident Number\n            return (\n              <div className=\"case-name-cell\">\n                <Link href={`/cases/${case_.case_id}`} className=\"case-link\">\n                  <strong>{case_.case_number}</strong>\n                </Link>\n              </div>\n            )\n          case 1: // Intake Date\n            return new Date(case_.created_date).toLocaleDateString()\n          case 2: // Key Allegation\n            return (\n              <div className=\"allegation-cell\">\n                <span className=\"allegation-type\">{case_.allegation_type}</span>\n                <div className=\"allegation-desc\">{case_.allegation_description}</div>\n              </div>\n            )\n          case 3: // Actions\n            return (\n              <button \n                onClick={() => onActionClick(case_)}\n                className={`action-btn small ${config.actionButton.className}`}\n                title={config.actionButton.text}\n              >\n                <span className=\"icon\">{config.actionButton.icon}</span>\n                {config.actionButton.text}\n              </button>\n            )\n          default:\n            return null\n        }\n      \n      case 'edits-required':\n        // Placeholder for future implementation\n        switch (columnIndex) {\n          case 0: // Case Name\n            return (\n              <div className=\"case-name-cell\">\n                <Link href={`/cases/${case_.case_id}`} className=\"case-link\">\n                  <strong>{case_.case_display_name || case_.family_name}</strong>\n                </Link>\n                <div className=\"case-number\">{case_.case_number}</div>\n              </div>\n            )\n          case 1: // Last Updated\n            return new Date(case_.created_date).toLocaleDateString()\n          case 2: // Supervisor Note\n            return \"Placeholder for supervisor feedback\"\n          case 3: // Actions\n            return (\n              <button \n                onClick={() => onActionClick(case_)}\n                className={`action-btn small ${config.actionButton.className}`}\n                title={config.actionButton.text}\n              >\n                <span className=\"icon\">{config.actionButton.icon}</span>\n                {config.actionButton.text}\n              </button>\n            )\n          default:\n            return null\n        }\n      \n      case 'case-setup':\n        // Placeholder for future implementation\n        switch (columnIndex) {\n          case 0: // Case Name\n            return (\n              <div className=\"case-name-cell\">\n                <Link href={`/cases/${case_.case_id}`} className=\"case-link\">\n                  <strong>{case_.case_display_name || case_.family_name}</strong>\n                </Link>\n                <div className=\"case-number\">{case_.case_number}</div>\n              </div>\n            )\n          case 1: // Assigned SWCM\n            return case_.assigned_worker || 'Unassigned'\n          case 2: // Setup Progress\n            return \"Progress placeholder\"\n          case 3: // Actions\n            return (\n              <button \n                onClick={() => onActionClick(case_)}\n                className={`action-btn small ${config.actionButton.className}`}\n                title={config.actionButton.text}\n              >\n                <span className=\"icon\">{config.actionButton.icon}</span>\n                {config.actionButton.text}\n              </button>\n            )\n          default:\n            return null\n        }\n      \n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"task-table-container\">\n      <div className=\"task-table-header\">\n        <h3 className=\"task-table-title\">{config.title}</h3>\n        <div className=\"task-table-count\">{cases.length} cases</div>\n      </div>\n      \n      {cases.length > 0 ? (\n        <div className=\"table-container\">\n          <table className=\"data-table task-table\">\n            <thead>\n              <tr>\n                {config.columns.map((column, index) => (\n                  <th key={index}>{column}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {cases.map((case_) => (\n                <tr key={case_.case_id}>\n                  {config.columns.map((_, columnIndex) => (\n                    <td key={columnIndex}>\n                      {renderCellContent(case_, columnIndex)}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"empty-state\">\n          <span className=\"icon large\">check_circle</span>\n          <h3>No Cases in Queue</h3>\n          <p>All cases for this task have been completed.</p>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/cpw/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport Link from 'next/link'\nimport { Case, getCasesByWorker } from '../../lib/api'\nimport { getCurrentUser } from '../../lib/mockData'\nimport RequestSWCMAssignmentModal from '../../components/RequestSWCMAssignmentModal'\nimport TaskTable from '../../components/TaskTable'\n\nexport default function CPWPage() {\n  const [activeFilters, setActiveFilters] = useState<string[]>(['Draft Cases'])\n  const [cases, setCases] = useState<Case[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [isSetupModalOpen, setIsSetupModalOpen] = useState(false)\n  const [selectedCase, setSelectedCase] = useState<Case | null>(null)\n  const [activeTask, setActiveTask] = useState<string | null>(null)\n\n  useEffect(() => {\n    loadCases()\n  }, [])\n\n  const loadCases = async () => {\n    setLoading(true)\n    setError(null)\n    \n    // For demo: show unassigned cases since no workers are assigned yet in the workflow\n    const response = await getCasesByWorker('unassigned')\n    \n    if (response.error) {\n      setError(response.error)\n    } else if (response.data) {\n      setCases(response.data.cases)\n    }\n    \n    setLoading(false)\n  }\n\n  const getIndicatorIcon = (indicator: string) => {\n    switch (indicator.toLowerCase()) {\n      case 'allergy': return 'medical_services'\n      case 'icwa eligible': return 'diversity_3'\n      case 'runaway': return 'directions_run'\n      case 'worker safety': return 'security'\n      case 'protective order': return 'gavel'\n      case 'icpc': return 'swap_horiz'\n      case 'safe haven': return 'shield'\n      case 'chronic medical condition': return 'local_hospital'\n      default: return 'flag'\n    }\n  }\n\n  const getIndicatorColor = (indicator: string) => {\n    switch (indicator.toLowerCase()) {\n      case 'allergy': return 'error'\n      case 'icwa eligible': return 'tertiary'\n      case 'runaway': return 'error'\n      case 'worker safety': return 'error'\n      case 'protective order': return 'secondary'\n      case 'chronic medical condition': return 'secondary'\n      default: return 'primary'\n    }\n  }\n\n  const getChildrenNames = (case_: Case) => {\n    if (!case_.persons) return null\n    const children = case_.persons.filter(person => person.role === 'Client')\n    if (children.length === 0) return null\n    \n    return children.map((child, index) => (\n      <span key={child.person_id}>\n        <Link href={`/persons/${child.person_id}`} className=\"child-link\">\n          {child.first_name} {child.last_name}\n        </Link>\n        {index < children.length - 1 && ', '}\n      </span>\n    ))\n  }\n\n  const getAllIndicators = (case_: Case) => {\n    const indicators = new Set<string>()\n    if (case_.persons) {\n      case_.persons.forEach(person => {\n        if (person.indicators) {\n          person.indicators.forEach(indicator => indicators.add(indicator))\n        }\n      })\n    }\n    return Array.from(indicators)\n  }\n\n  const handleSetupCase = (case_: Case) => {\n    setSelectedCase(case_)\n    setIsSetupModalOpen(true)\n  }\n\n  const handleStartCaseSetup = (case_: Case) => {\n    // TODO: Open comprehensive case setup modal/component\n    // For now, navigate to case details page\n    window.location.href = `/cases/${case_.case_id}`\n  }\n\n  const hasSavedProgress = (caseId: string) => {\n    try {\n      const saved = localStorage.getItem(`cpw_setup_${caseId}`)\n      return saved !== null\n    } catch (error) {\n      return false\n    }\n  }\n\n  const getSetupProgress = (caseId: string) => {\n    try {\n      const saved = localStorage.getItem(`cpw_setup_${caseId}`)\n      if (!saved) return { step: 0, total: 4, percentage: 0 }\n      \n      const data = JSON.parse(saved)\n      const currentStep = data.currentStep || 1\n      const total = 4\n      const percentage = Math.round((currentStep / total) * 100)\n      \n      return { step: currentStep, total, percentage }\n    } catch (error) {\n      return { step: 0, total: 4, percentage: 0 }\n    }\n  }\n\n  const handleSetupSuccess = () => {\n    setIsSetupModalOpen(false)\n    setSelectedCase(null)\n    loadCases() // Reload cases to reflect status changes\n  }\n\n  const handleCloseModal = () => {\n    setIsSetupModalOpen(false)\n    setSelectedCase(null)\n  }\n\n  // Handle task card clicks - toggle between showing task view and default view\n  const handleTaskCardClick = (taskType: string) => {\n    if (activeTask === taskType) {\n      // If clicking the same task, toggle it off\n      setActiveTask(null)\n    } else {\n      // Set the new active task\n      setActiveTask(taskType)\n    }\n  }\n\n  // Get cases for the active task\n  const getTaskCases = (taskType: string) => {\n    switch (taskType) {\n      case 'request-assignment':\n        return cases.filter(c => c.status.toLowerCase() === 'draft')\n      case 'edits-required':\n        return cases.filter(c => c.status.toLowerCase() === 'edits required')\n      case 'case-setup':\n        return cases.filter(c => c.status.toLowerCase() === 'case setup')\n      default:\n        return []\n    }\n  }\n\n  // Handle task table action clicks\n  const handleTaskAction = (case_: Case) => {\n    if (activeTask === 'request-assignment') {\n      handleSetupCase(case_)\n    } else if (activeTask === 'edits-required') {\n      // TODO: Handle edits required action\n      console.log('Handle edits required for case:', case_.case_id)\n    } else if (activeTask === 'case-setup') {\n      handleStartCaseSetup(case_)\n    }\n  }\n\n\n  // Define available filter tags\n  const filterTags = [\n    { id: 'pending-assignment', label: 'Pending Assignment', status: ['Pending Assignment'], count: cases.filter(c => c.status === 'Pending Assignment').length },\n    { id: 'pending-approval', label: 'Pending Approval', status: ['Pending Approval'], count: cases.filter(c => c.status === 'Pending Approval').length },\n    { id: 'ready-swcm-assignment', label: 'Ready for SWCM Assignment', status: ['Draft'], count: cases.filter(c => c.status === 'Draft').length },\n    { id: 'active', label: 'Active', status: ['Active'], count: cases.filter(c => c.status === 'Active').length }\n  ]\n\n  // Toggle filter tag\n  const toggleFilter = (tagId: string) => {\n    const tag = filterTags.find(t => t.id === tagId)\n    if (!tag) return\n\n    setActiveFilters(prev => {\n      const isActive = prev.includes(tag.label)\n      if (isActive) {\n        return prev.filter(f => f !== tag.label)\n      } else {\n        return [...prev, tag.label]\n      }\n    })\n  }\n\n  // Filter cases based on active filters\n  const filteredCases = cases.filter(case_ => {\n    if (activeFilters.length === 0) return true\n    \n    return filterTags.some(tag => \n      activeFilters.includes(tag.label) && tag.status.includes(case_.status)\n    )\n  })\n\n  // Get action button for case based on status\n  const getCaseActionButton = (case_: Case) => {\n    switch (case_.status) {\n      case 'Draft':\n        return (\n          <button \n            onClick={() => handleSetupCase(case_)}\n            className=\"action-btn small primary\"\n            title=\"Request SWCM Assignment\"\n          >\n            <span className=\"icon\">assignment_ind</span>\n            Request Assignment\n          </button>\n        )\n      case 'Pending Assignment':\n        return (\n          <button \n            className=\"action-btn small secondary\"\n            disabled\n            title=\"Waiting for SWCM assignment\"\n          >\n            <span className=\"icon\">hourglass_empty</span>\n            Pending\n          </button>\n        )\n      case 'Case Setup':\n        return (\n          <button \n            onClick={() => handleStartCaseSetup(case_)}\n            className=\"action-btn small primary\"\n            title={hasSavedProgress(case_.case_id) ? 'Resume case setup progress' : 'Start comprehensive case setup'}\n          >\n            <span className=\"icon\">{hasSavedProgress(case_.case_id) ? 'play_arrow' : 'settings'}</span>\n            {hasSavedProgress(case_.case_id) ? 'Resume Setup' : 'Start Setup'}\n          </button>\n        )\n      case 'Pending Approval':\n        return (\n          <button \n            className=\"action-btn small secondary\"\n            disabled\n            title=\"Case setup complete, awaiting supervisor approval\"\n          >\n            <span className=\"icon\">pending</span>\n            Awaiting Approval\n          </button>\n        )\n      case 'Active':\n      case 'Closed':\n        return (\n          <Link href={`/cases/${case_.case_id}`} className=\"action-btn small primary\">\n            <span className=\"icon\">visibility</span>\n            View\n          </Link>\n        )\n      default:\n        return (\n          <button className=\"action-btn small secondary\" disabled>\n            <span className=\"icon\">help</span>\n            Unknown Status\n          </button>\n        )\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"page-container\">\n        <div className=\"page-header\">\n          <h1 className=\"page-title\">CPW Dashboard</h1>\n          <p className=\"page-description\">Loading cases...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"page-header modern-header\">\n        <h1 className=\"greeting-title\">Hi Dana! What can I help you with today?</h1>\n        <div className=\"search-container\">\n          <div className=\"search-bar\">\n            <span className=\"search-icon icon\">search</span>\n            <input \n              type=\"text\" \n              className=\"search-input\" \n              placeholder=\"Ask me anything about your cases, or search for specific information...\"\n            />\n            <button className=\"search-submit\">\n              <span className=\"icon\">send</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"content-wrapper\">\n        {/* My Tasks Section */}\n        <div className=\"my-tasks-section\">\n          <h2 className=\"section-title\">My Tasks</h2>\n          <div className=\"task-cards-grid\">\n            <div \n              className={`task-card primary ${activeTask === 'request-assignment' ? 'active' : ''}`} \n              onClick={() => handleTaskCardClick('request-assignment')}\n            >\n              <div className=\"task-card-icon\">\n                <span className=\"icon\">assignment_ind</span>\n              </div>\n              <div className=\"task-card-content\">\n                <h3>Ready to Request SWCM Assignment</h3>\n                <p className=\"task-count\">{cases.filter(c => c.status.toLowerCase() === 'draft').length} cases</p>\n                <p className=\"task-description\">New cases ready for assignment request</p>\n              </div>\n              <div className=\"task-card-action\">\n                <span className=\"icon\">arrow_forward</span>\n              </div>\n            </div>\n\n            <div \n              className={`task-card error ${activeTask === 'edits-required' ? 'active' : ''}`} \n              onClick={() => handleTaskCardClick('edits-required')}\n            >\n              <div className=\"task-card-icon\">\n                <span className=\"icon\">edit</span>\n              </div>\n              <div className=\"task-card-content\">\n                <h3>Edits Required</h3>\n                <p className=\"task-count\">{cases.filter(c => c.status.toLowerCase() === 'edits required').length} cases</p>\n                <p className=\"task-description\">Cases returned by supervisor for changes</p>\n              </div>\n              <div className=\"task-card-action\">\n                <span className=\"icon\">arrow_forward</span>\n              </div>\n            </div>\n\n            <div \n              className={`task-card secondary ${activeTask === 'case-setup' ? 'active' : ''}`} \n              onClick={() => handleTaskCardClick('case-setup')}\n            >\n              <div className=\"task-card-icon\">\n                <span className=\"icon\">settings</span>\n              </div>\n              <div className=\"task-card-content\">\n                <h3>Ready for Setup</h3>\n                <p className=\"task-count\">{cases.filter(c => c.status.toLowerCase() === 'case setup').length} cases</p>\n                <p className=\"task-description\">Cases assigned and ready for setup</p>\n              </div>\n              <div className=\"task-card-action\">\n                <span className=\"icon\">arrow_forward</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Task Table or Filter Section */}\n        {activeTask ? (\n          <TaskTable\n            taskType={activeTask}\n            cases={getTaskCases(activeTask)}\n            onActionClick={handleTaskAction}\n          />\n        ) : (\n          <div className=\"filter-container\">\n            <div className=\"filter-header\">\n              <h3 className=\"section-subtitle\">My Cases</h3>\n              <div className=\"filter-actions\">\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => setActiveFilters([])}\n                  disabled={activeFilters.length === 0}\n                >\n                  <span className=\"icon\">clear_all</span>\n                  Clear Filters\n                </button>\n                <button className=\"action-btn primary\" onClick={loadCases}>\n                  <span className=\"icon\">refresh</span>\n                  Refresh\n                </button>\n              </div>\n            </div>\n            <div className=\"filter-tags\">\n              {filterTags.map(tag => (\n                <button\n                  key={tag.id}\n                  onClick={() => toggleFilter(tag.id)}\n                  className={`filter-tag ${activeFilters.includes(tag.label) ? 'active' : ''}`}\n                  disabled={tag.count === 0}\n                >\n                  <span className=\"tag-label\">{tag.label}</span>\n                  <span className=\"tag-count\">({tag.count})</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Main Cases Table - only show when no task is active */}\n        {!activeTask && (\n        <div className=\"content-area\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2>\n                {activeFilters.length === 0 \n                  ? 'My Cases' \n                  : activeFilters.length === 1 \n                    ? activeFilters[0] \n                    : `${activeFilters.length} Filters Active`\n                }\n                {activeFilters.length > 1 && (\n                  <span className=\"filter-summary\"> ({activeFilters.join(', ')})</span>\n                )}\n              </h2>\n              <div className=\"card-actions\">\n                <span className=\"case-count\">{filteredCases.length} cases</span>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              {error && (\n                <div className=\"error-message\">\n                  <span className=\"icon\">error</span>\n                  {error}\n                </div>\n              )}\n              {filteredCases.length > 0 ? (\n                <div className=\"table-container\">\n                  <table className=\"data-table\">\n                    <thead>\n                      <tr>\n                        <th>Case Name</th>\n                        <th>Status</th>\n                        <th>Intake Date</th>\n                        <th>Key Allegations</th>\n                        <th>Children Involved</th>\n                        <th>Indicators</th>\n                        <th>Progress</th>\n                        <th>Assigned Workers</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredCases.map((case_) => (\n                        <tr key={case_.case_id}>\n                          <td>\n                            <div className=\"case-name-cell\">\n                              <Link href={`/cases/${case_.case_id}`} className=\"case-link\">\n                                <strong>{case_.case_display_name || case_.family_name}</strong>\n                              </Link>\n                              <div className=\"case-number\">{case_.case_number}</div>\n                            </div>\n                          </td>\n                          <td>\n                            <span className={`status-badge ${case_.status.toLowerCase().replace(/\\s+/g, '-')}`}>\n                              {case_.status}\n                            </span>\n                          </td>\n                          <td>{new Date(case_.created_date).toLocaleDateString()}</td>\n                          <td>\n                            <div className=\"allegation-cell\">\n                              <span className=\"allegation-type\">{case_.allegation_type}</span>\n                              <div className=\"allegation-desc\">{case_.allegation_description}</div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"children-list\">\n                              {getChildrenNames(case_) || 'No children listed'}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"indicators-cell\">\n                              {getAllIndicators(case_).slice(0, 3).map((indicator, index) => (\n                                <span \n                                  key={index}\n                                  className={`indicator-badge ${getIndicatorColor(indicator)}`}\n                                  title={indicator}\n                                >\n                                  <span className=\"icon\">{getIndicatorIcon(indicator)}</span>\n                                  {indicator}\n                                </span>\n                              ))}\n                              {getAllIndicators(case_).length > 3 && (\n                                <span className=\"indicator-more\">\n                                  +{getAllIndicators(case_).length - 3} more\n                                </span>\n                              )}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"progress-cell\">\n                              {case_.status === 'Case Setup' && (() => {\n                                const progress = getSetupProgress(case_.case_id)\n                                return (\n                                  <div className=\"setup-progress-indicator\">\n                                    <div className=\"progress-bar-small\">\n                                      <div \n                                        className=\"progress-fill-small\" \n                                        style={{ width: `${progress.percentage}%` }}\n                                      ></div>\n                                    </div>\n                                    <div className=\"progress-text-small\">\n                                      {progress.step > 0 ? `Step ${progress.step}/${progress.total}` : 'Not Started'}\n                                    </div>\n                                  </div>\n                                )\n                              })()}\n                              {case_.status !== 'Case Setup' && (\n                                <span className=\"progress-na\">—</span>\n                              )}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"workers-cell\">\n                              <div className=\"primary-worker\">\n                                <strong>Primary:</strong> {case_.assigned_worker || 'Unassigned'}\n                              </div>\n                              {case_.assigned_supervisor && (\n                                <div className=\"supervisor\">\n                                  <strong>Supervisor:</strong> {case_.assigned_supervisor}\n                                </div>\n                              )}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"action-buttons\">\n                              {getCaseActionButton(case_)}\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"empty-state\">\n                  <span className=\"icon large\">filter_list</span>\n                  <h3>No Cases Match Current Filters</h3>\n                  <p>\n                    {activeFilters.length === 0 \n                      ? 'No cases found in the system'\n                      : `Try adjusting your filters or clearing them to see more cases`\n                    }\n                  </p>\n                  {activeFilters.length > 0 && (\n                    <button \n                      className=\"action-btn primary\"\n                      onClick={() => setActiveFilters([])}\n                    >\n                      <span className=\"icon\">clear_all</span>\n                      Clear All Filters\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        )}\n      </div>\n\n      {/* Request SWCM Assignment Modal */}\n      <RequestSWCMAssignmentModal\n        isOpen={isSetupModalOpen}\n        onClose={handleCloseModal}\n        case_={selectedCase}\n        onSuccess={handleSetupSuccess}\n      />\n\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}