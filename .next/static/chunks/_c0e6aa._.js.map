{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/api.ts"],"sourcesContent":["/**\n * API client for the Child Welfare Case Management System\n */\n\n// Use the direct Cloud Run service for local development\nconst API_BASE_URL = 'https://ccwis-core-case-mgmt-807576987550.us-central1.run.app'\n\nexport interface ApiResponse<T> {\n  data?: T\n  error?: string\n}\n\nexport interface Case {\n  case_id: string\n  case_number: string\n  case_display_name: string\n  status: string\n  priority_level: string\n  primary_child: string\n  family_name: string\n  allegation_type: string\n  allegation_description: string\n  county: string\n  created_date: string\n  last_updated: string\n  created_by: string\n  assigned_worker?: string\n  assigned_supervisor?: string\n  workflow_status: {\n    current_stage: string\n    cpw_reviewed: boolean\n    cpw_supervisor_approved: boolean\n    swcm_assigned: boolean\n  }\n  risk_level?: string\n  safety_factors?: string[]\n  safety_assessment_due?: string\n  assessment_notes?: string\n  persons?: Person[]\n  timeline_events?: TimelineEvent[]\n  case_notes?: CaseNote[]\n  documents?: Document[]\n  address?: {\n    street_address?: string\n    city?: string\n    state?: string\n    zipcode?: number\n  }\n}\n\nexport interface Person {\n  person_id: string\n  first_name: string\n  last_name: string\n  date_of_birth: string\n  role: string\n  contact_info: {\n    phone?: string\n    email?: string\n    address?: string\n  }\n  indicators?: string[]\n  relationship_to_primary_child?: string\n}\n\nexport interface TimelineEvent {\n  event_id: string\n  event_type: string\n  title: string\n  description: string\n  date: string\n  created_by: string\n  priority?: string\n}\n\nexport interface CaseNote {\n  note_id: string\n  text: string\n  created_by: string\n  created_date: string\n  note_type?: string\n  genai_summary?: string\n}\n\nexport interface Document {\n  document_id: string\n  title: string\n  type: string\n  uploaded_date: string\n  uploaded_by: string\n  file_size?: string\n  description?: string\n}\n\nclass ApiClient {\n  private baseUrl: string\n\n  constructor(baseUrl: string = API_BASE_URL) {\n    this.baseUrl = baseUrl\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    try {\n      const url = `${this.baseUrl}${endpoint}`\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        return {\n          error: errorData.error || `HTTP ${response.status}: ${response.statusText}`,\n        }\n      }\n\n      const data = await response.json()\n      return { data }\n    } catch (error) {\n      return {\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      }\n    }\n  }\n\n  // SWCM Supervisor endpoints\n  async getCasesPendingAssignment(): Promise<ApiResponse<{ cases: Case[] }>> {\n    return this.request<{ cases: Case[] }>('/swcm/cases/pending-assignment')\n  }\n\n  async assignCaseToSWCM(\n    caseId: string,\n    assignedWorker: string,\n    assignedSupervisor?: string\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/swcm/cases/${caseId}/assign`, {\n      method: 'POST',\n      body: JSON.stringify({\n        assigned_worker: assignedWorker,\n        assigned_supervisor: assignedSupervisor,\n      }),\n    })\n  }\n\n  // SWCM Worker endpoints\n  async getCasesByWorker(workerName: string): Promise<ApiResponse<{ cases: Case[] }>> {\n    return this.request<{ cases: Case[] }>(`/cases?assigned_worker=${encodeURIComponent(workerName)}`)\n  }\n\n  async getCaseById(caseId: string): Promise<ApiResponse<Case>> {\n    return this.request<Case>(`/cases/${caseId}`)\n  }\n\n  async getPersonsByCase(caseId: string): Promise<ApiResponse<{ persons: Person[] }>> {\n    return this.request<{ persons: Person[] }>(`/cases/${caseId}/persons`)\n  }\n\n  async getCaseNotes(caseId: string): Promise<ApiResponse<{ notes: CaseNote[] }>> {\n    return this.request<{ notes: CaseNote[] }>(`/cases/${caseId}/notes`)\n  }\n\n  async addCaseNote(\n    caseId: string,\n    noteText: string,\n    noteType?: string\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/cases/${caseId}/notes`, {\n      method: 'POST',\n      body: JSON.stringify({\n        note_text: noteText,\n        note_type: noteType || 'General',\n      }),\n    })\n  }\n\n  async updateCase(\n    caseId: string,\n    updates: Partial<Case>\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/cases/${caseId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    })\n  }\n\n  // Person search\n  async searchPersons(query: string): Promise<ApiResponse<{ persons: Person[] }>> {\n    return this.request<{ persons: Person[] }>(`/persons/search?q=${encodeURIComponent(query)}`)\n  }\n\n  // Get person by ID\n  async getPersonById(personId: string): Promise<ApiResponse<Person>> {\n    return this.request<Person>(`/persons/${personId}`)\n  }\n\n  // Health check\n  async healthCheck(): Promise<ApiResponse<{ status: string; service: string }>> {\n    return this.request<{ status: string; service: string }>('/health')\n  }\n}\n\n// Export singleton instance\nexport const apiClient = new ApiClient()\n\n// Export individual functions for convenience\nexport const getCasesPendingAssignment = () => apiClient.getCasesPendingAssignment()\nexport const assignCaseToSWCM = (caseId: string, assignedWorker: string, assignedSupervisor?: string) => \n  apiClient.assignCaseToSWCM(caseId, assignedWorker, assignedSupervisor)\nexport const getCasesByWorker = (workerName: string) => apiClient.getCasesByWorker(workerName)\nexport const getCaseById = (caseId: string) => apiClient.getCaseById(caseId)\nexport const getPersonsByCase = (caseId: string) => apiClient.getPersonsByCase(caseId)\nexport const getCaseNotes = (caseId: string) => apiClient.getCaseNotes(caseId)\nexport const addCaseNote = (caseId: string, noteText: string, noteType?: string) => \n  apiClient.addCaseNote(caseId, noteText, noteType)\nexport const updateCase = (caseId: string, updates: Partial<Case>) => \n  apiClient.updateCase(caseId, updates)\nexport const searchPersons = (query: string) => apiClient.searchPersons(query)\nexport const getPersonById = (personId: string) => apiClient.getPersonById(personId)\nexport const healthCheck = () => apiClient.healthCheck()\n\n// Magic Button data interface based on BigQuery schema\nexport interface MagicButtonData {\n  incident_number: string\n  child_first_names: string\n  child_last_names: string\n  parent_first_names: string\n  parent_last_names: string\n  cps_worker: string\n  due_date: string\n  county_of_assessment: string\n  intake_date: string\n  reported_native_american_heritage: string\n  perpetrators: string\n  perpetrator_first_name: string\n  perpetrator_last_name: string\n  findings: string\n  allegations: string\n  victims: string\n  victim_first_name: string\n  victim_last_name: string\n  person_id: string\n  role: string\n  gender: string\n  age_calculated: number\n  prior_workers: string\n  current_address: string\n  address_type: string\n  residence_county: string\n  date_of_birth: string\n  phone_number: string\n  phone_type: string\n  address: string\n  city: string\n  state: string\n  zip_code: number\n  non_custodial_parent: boolean\n  non_custodial_parent_person_id: string\n  non_custodial_parent_first_name: string\n  non_custodial_parent_last_name: string\n  non_custodial_parent_middle_name: string\n  non_custodial_parent_dob: string\n  non_custodial_parent_ssn: string\n  non_custodial_parent_suffix: string\n  non_custodial_parent_sex: string\n  non_custodial_parent_race: string\n  non_custodial_parent_ethnicity: string\n  legal_custodian: string\n  guardian: string\n  prior_assessment: string\n  type_of_appointment: string\n  clinic_name: string\n  appointment_date: string\n}\n\n// Search Magic Button data by incident number (mock implementation for now)\nexport const searchMagicButtonData = async (query: string): Promise<ApiResponse<{ incidents: MagicButtonData[] }>> => {\n  // Mock implementation - replace with real API call when backend is ready\n  await new Promise(resolve => setTimeout(resolve, 400))\n  \n  // Mock data for development\n  const mockIncidents: MagicButtonData[] = [\n    {\n      incident_number: \"INC-2024-001234\",\n      child_first_names: \"Emma\",\n      child_last_names: \"Johnson\", \n      parent_first_names: \"Michael, Sarah\",\n      parent_last_names: \"Johnson, Johnson\",\n      cps_worker: \"Dana Wilson\",\n      due_date: \"2024-09-15\",\n      county_of_assessment: \"King County\",\n      intake_date: \"2024-08-15\",\n      reported_native_american_heritage: \"No\",\n      perpetrators: \"Michael Johnson\",\n      perpetrator_first_name: \"Michael\",\n      perpetrator_last_name: \"Johnson\",\n      findings: \"Substantiated\",\n      allegations: \"Physical abuse\",\n      victims: \"Emma Johnson\",\n      victim_first_name: \"Emma\", \n      victim_last_name: \"Johnson\",\n      person_id: \"12345\",\n      role: \"Client\",\n      gender: \"Female\",\n      age_calculated: 8,\n      prior_workers: \"None\",\n      current_address: \"123 Main St\",\n      address_type: \"Residential\",\n      residence_county: \"King County\",\n      date_of_birth: \"2016-03-12\",\n      phone_number: \"206-555-0123\",\n      phone_type: \"Home\",\n      address: \"123 Main St\",\n      city: \"Seattle\",\n      state: \"WA\",\n      zip_code: 98101,\n      non_custodial_parent: false,\n      non_custodial_parent_person_id: \"\",\n      non_custodial_parent_first_name: \"\",\n      non_custodial_parent_last_name: \"\",\n      non_custodial_parent_middle_name: \"\",\n      non_custodial_parent_dob: \"\",\n      non_custodial_parent_ssn: \"\",\n      non_custodial_parent_suffix: \"\",\n      non_custodial_parent_sex: \"\",\n      non_custodial_parent_race: \"\",\n      non_custodial_parent_ethnicity: \"\",\n      legal_custodian: \"Sarah Johnson\",\n      guardian: \"\",\n      prior_assessment: \"None\",\n      type_of_appointment: \"\",\n      clinic_name: \"\",\n      appointment_date: \"\"\n    }\n  ]\n  \n  if (!query || query.length < 2) {\n    return { data: { incidents: [] }, error: undefined }\n  }\n  \n  const filteredIncidents = mockIncidents.filter(incident => \n    incident.incident_number.toLowerCase().includes(query.toLowerCase()) ||\n    incident.child_first_names.toLowerCase().includes(query.toLowerCase()) ||\n    incident.child_last_names.toLowerCase().includes(query.toLowerCase()) ||\n    incident.allegations.toLowerCase().includes(query.toLowerCase())\n  )\n  \n  return { data: { incidents: filteredIncidents }, error: undefined }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ChevronStepper.tsx"],"sourcesContent":["'use client'\n\ninterface StepperStep {\n  id: string\n  title: string\n  completed: boolean\n  started?: boolean\n  disabled?: boolean\n}\n\ninterface ChevronStepperProps {\n  steps: StepperStep[]\n  currentStep: string\n  onStepClick: (stepId: string) => void\n  className?: string\n}\n\nexport default function ChevronStepper({ steps, currentStep, onStepClick, className = '' }: ChevronStepperProps) {\n  return (\n    <div className={`chevron-stepper ${className}`}>\n      {steps.map((step, index) => {\n        const isActive = step.id === currentStep\n        const isCompleted = step.completed\n        const isStarted = step.started\n        const isDisabled = step.disabled\n        \n        return (\n          <div\n            key={step.id}\n            className={`chevron-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''} ${isStarted && !isCompleted ? 'started' : ''} ${isDisabled ? 'disabled' : ''}`}\n            onClick={() => !isDisabled && onStepClick(step.id)}\n            style={{ zIndex: steps.length - index }}\n          >\n            <div className=\"chevron-content\">\n              <div className=\"step-icon\">\n                {isCompleted ? (\n                  <div className=\"checkbox-icon\">\n                    <span className=\"icon\">check_box</span>\n                  </div>\n                ) : (\n                  <span className=\"step-number\">{index + 1}</span>\n                )}\n              </div>\n              <span className=\"step-title\">{step.title}</span>\n            </div>\n          </div>\n        )\n      })}\n      \n      <style jsx>{`\n        .chevron-stepper {\n          display: flex;\n          align-items: center;\n          margin: 0;\n          padding: 0;\n          overflow: hidden;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          width: 100%;\n        }\n        \n        .chevron-stepper.full-width {\n          width: 100%;\n        }\n        \n        .chevron-stepper.full-width .chevron-step {\n          flex: 1;\n          min-width: 0;\n        }\n        \n        .chevron-step {\n          position: relative;\n          display: flex;\n          align-items: center;\n          padding: 20px 28px 20px 20px;\n          background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n          color: #64748b;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          min-width: 140px;\n          margin-right: -14px;\n          clip-path: polygon(0 0, calc(100% - 14px) 0, 100% 50%, calc(100% - 14px) 100%, 0 100%, 14px 50%);\n          border: 1px solid #cbd5e1;\n        }\n        \n        .chevron-step:first-child {\n          margin-left: 0;\n          padding-left: 24px;\n          clip-path: polygon(0 0, calc(100% - 14px) 0, 100% 50%, calc(100% - 14px) 100%, 0 100%);\n        }\n        \n        .chevron-step:last-child {\n          margin-right: 0;\n          padding-right: 24px;\n          clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%, 14px 50%);\n        }\n        \n        .chevron-step:first-child:last-child {\n          clip-path: none;\n          margin-right: 0;\n        }\n        \n        .chevron-step.completed {\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          color: white;\n          border-color: #047857;\n          box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);\n        }\n        \n        .chevron-step.active {\n          background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);\n          color: white;\n          border-color: #6d28d9;\n          transform: scale(1.02);\n          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.4);\n        }\n        \n        .chevron-step.started {\n          background: linear-gradient(135deg, #ddd6fe 0%, #c4b5fd 100%);\n          color: #6d28d9;\n          border-color: #8b5cf6;\n          box-shadow: 0 2px 8px rgba(139, 92, 246, 0.2);\n        }\n        \n        .chevron-step.started .step-icon {\n          background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);\n          color: white;\n        }\n        \n        .chevron-step.disabled {\n          background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n          color: #94a3b8;\n          cursor: not-allowed;\n          opacity: 0.6;\n          border-color: #e2e8f0;\n        }\n        \n        .chevron-step:not(.disabled):hover {\n          background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);\n          color: #475569;\n          transform: translateY(-1px);\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        }\n        \n        .chevron-step.completed:hover {\n          background: linear-gradient(135deg, #059669 0%, #047857 100%);\n          box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);\n        }\n        \n        .chevron-step.active:hover {\n          background: linear-gradient(135deg, #7c3aed 0%, #6d28d9 100%);\n          box-shadow: 0 6px 16px rgba(139, 92, 246, 0.5);\n        }\n        \n        .chevron-step.disabled:hover {\n          background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n          color: #94a3b8;\n          transform: none;\n          box-shadow: none;\n        }\n        \n        .chevron-content {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          position: relative;\n          z-index: 1;\n        }\n        \n        .step-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          background: rgba(255, 255, 255, 0.2);\n          font-size: 14px;\n          font-weight: 600;\n        }\n        \n        .chevron-step.completed .step-icon,\n        .chevron-step.active .step-icon {\n          background: rgba(255, 255, 255, 0.3);\n        }\n        \n        .chevron-step.disabled .step-icon {\n          background: rgba(148, 163, 184, 0.3);\n        }\n        \n        .step-number {\n          font-size: 12px;\n          font-weight: 600;\n        }\n        \n        .step-title {\n          font-size: 14px;\n          font-weight: 500;\n          white-space: nowrap;\n        }\n        \n        .icon {\n          font-family: 'Material Icons';\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAAA;;;AAiBe,SAAS,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,EAAuB;IAC7G,qBACE,6LAAC;kDAAe,CAAC,gBAAgB,EAAE,UAAU,CAAC;;YAC3C,MAAM,GAAG,CAAC,CAAC,MAAM;gBAChB,MAAM,WAAW,KAAK,EAAE,KAAK;gBAC7B,MAAM,cAAc,KAAK,SAAS;gBAClC,MAAM,YAAY,KAAK,OAAO;gBAC9B,MAAM,aAAa,KAAK,QAAQ;gBAEhC,qBACE,6LAAC;oBAGC,SAAS,IAAM,CAAC,cAAc,YAAY,KAAK,EAAE;oBACjD,OAAO;wBAAE,QAAQ,MAAM,MAAM,GAAG;oBAAM;8DAF3B,CAAC,aAAa,EAAE,WAAW,WAAW,GAAG,CAAC,EAAE,cAAc,cAAc,GAAG,CAAC,EAAE,aAAa,CAAC,cAAc,YAAY,GAAG,CAAC,EAAE,aAAa,aAAa,GAAG,CAAC;8BAIrK,cAAA,6LAAC;kEAAc;;0CACb,6LAAC;0EAAc;0CACZ,4BACC,6LAAC;8EAAc;8CACb,cAAA,6LAAC;kFAAe;kDAAO;;;;;;;;;;yDAGzB,6LAAC;8EAAe;8CAAe,QAAQ;;;;;;;;;;;0CAG3C,6LAAC;0EAAe;0CAAc,KAAK,KAAK;;;;;;;;;;;;mBAfrC,KAAK,EAAE;;;;;YAmBlB;;;;;;;;;;;AAiKN;KA/LwB"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/CaseSetupTracker.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Case, updateCase } from '../lib/api'\nimport ProgressBar from './ProgressBar'\nimport ChevronStepper from './ChevronStepper'\n\ninterface CaseSetupTrackerProps {\n  case_: Case\n  onProgressUpdate?: () => void\n  onTabChange?: (tab: string, subTab?: string) => void\n}\n\ninterface SetupMilestone {\n  id: string\n  title: string\n  description: string\n  completed: boolean\n  required: boolean\n}\n\ninterface CaseSetupProgress {\n  caseId: string\n  completedMilestones: string[]\n  lastUpdated: string\n}\n\nconst SETUP_STEPS: Omit<SetupMilestone, 'completed'>[] = [\n  {\n    id: 'associations',\n    title: 'Associations',\n    description: 'Manage family associations and relationships',\n    required: true\n  },\n  {\n    id: 'living_arrangements',\n    title: 'Living Arrangements',\n    description: 'Document current living arrangements for all children',\n    required: true\n  },\n  {\n    id: 'services',\n    title: 'Services',\n    description: 'Set up and manage case services',\n    required: true\n  },\n  {\n    id: 'court',\n    title: 'Court',\n    description: 'Manage court information and legal documents',\n    required: true\n  },\n  {\n    id: 'checklist',\n    title: 'Checklist',\n    description: 'SWCM completion checklist (completed by SWCM)',\n    required: false\n  },\n  {\n    id: 'approval',\n    title: 'Approval',\n    description: 'Supervisor approval (completed by supervisor)',\n    required: false\n  }\n]\n\nexport default function CaseSetupTracker({ case_, onProgressUpdate }: CaseSetupTrackerProps) {\n  const [milestones, setMilestones] = useState<SetupMilestone[]>([])\n  const [currentStep, setCurrentStep] = useState<string>('associations')\n  const [loading, setLoading] = useState(false)\n\n  // Load progress from localStorage\n  const loadProgress = () => {\n    try {\n      const saved = localStorage.getItem(`case_setup_${case_.case_id}`)\n      const completedIds = saved ? JSON.parse(saved).completedMilestones || [] : []\n      \n      const milestonesWithProgress = SETUP_STEPS.map(milestone => ({\n        ...milestone,\n        completed: completedIds.includes(milestone.id)\n      }))\n      \n      setMilestones(milestonesWithProgress)\n    } catch (error) {\n      console.error('Error loading case setup progress:', error)\n      setMilestones(SETUP_STEPS.map(m => ({ ...m, completed: false })))\n    }\n  }\n\n  // Save progress to localStorage\n  const saveProgress = (completedIds: string[]) => {\n    try {\n      const progressData: CaseSetupProgress = {\n        caseId: case_.case_id,\n        completedMilestones: completedIds,\n        lastUpdated: new Date().toISOString()\n      }\n      \n      localStorage.setItem(`case_setup_${case_.case_id}`, JSON.stringify(progressData))\n      \n      if (onProgressUpdate) {\n        onProgressUpdate()\n      }\n    } catch (error) {\n      console.error('Error saving case setup progress:', error)\n    }\n  }\n\n  // Handle step click\n  const handleStepClick = (stepId: string) => {\n    setCurrentStep(stepId)\n    \n    // Navigate to the appropriate tab and section based on the step\n    switch (stepId) {\n      case 'associations':\n        // Navigate to People & Associations tab\n        const peopleTab = document.querySelector('[data-tab=\"people\"]') as HTMLButtonElement\n        if (peopleTab) {\n          peopleTab.click()\n          // Wait for tab to load, then scroll to associations\n          setTimeout(() => {\n            const associationsSubTab = document.querySelector('[data-subtab=\"associations\"]') as HTMLButtonElement\n            if (associationsSubTab) {\n              associationsSubTab.click()\n            }\n          }, 100)\n        }\n        break\n        \n      case 'living_arrangements':\n        // Navigate to Case Management tab, Living Arrangements section\n        const caseManagementTab = document.querySelector('[data-tab=\"case-management\"]') as HTMLButtonElement\n        if (caseManagementTab) {\n          caseManagementTab.click()\n          setTimeout(() => {\n            const livingSubTab = document.querySelector('[data-subtab=\"living\"]') as HTMLButtonElement\n            if (livingSubTab) {\n              livingSubTab.click()\n            }\n          }, 100)\n        }\n        break\n        \n      case 'services':\n        // Navigate to Case Management tab, Services section\n        const servicesTab = document.querySelector('[data-tab=\"case-management\"]') as HTMLButtonElement\n        if (servicesTab) {\n          servicesTab.click()\n          setTimeout(() => {\n            const servicesSubTab = document.querySelector('[data-subtab=\"services\"]') as HTMLButtonElement\n            if (servicesSubTab) {\n              servicesSubTab.click()\n            }\n          }, 100)\n        }\n        break\n        \n      case 'court':\n        // Navigate to Legal & Documentation tab, Court section\n        const legalTab = document.querySelector('[data-tab=\"legal\"]') as HTMLButtonElement\n        if (legalTab) {\n          legalTab.click()\n          setTimeout(() => {\n            const courtSubTab = document.querySelector('[data-subtab=\"court\"]') as HTMLButtonElement\n            if (courtSubTab) {\n              courtSubTab.click()\n            }\n          }, 100)\n        }\n        break\n        \n      default:\n        // For disabled steps (checklist, approval), do nothing\n        break\n    }\n  }\n\n  // Toggle milestone completion\n  const toggleMilestone = (milestoneId: string) => {\n    setMilestones(prev => {\n      const updated = prev.map(milestone => \n        milestone.id === milestoneId \n          ? { ...milestone, completed: !milestone.completed }\n          : milestone\n      )\n      \n      // Save to localStorage\n      const completedIds = updated.filter(m => m.completed).map(m => m.id)\n      saveProgress(completedIds)\n      \n      return updated\n    })\n  }\n\n  // Calculate progress\n  const getProgress = () => {\n    const completed = milestones.filter(m => m.completed).length\n    const total = milestones.length\n    const percentage = total > 0 ? Math.round((completed / total) * 100) : 0\n    \n    return { completed, total, percentage }\n  }\n\n  // Check if case setup is complete\n  const isSetupComplete = () => {\n    const requiredMilestones = milestones.filter(m => m.required)\n    return requiredMilestones.every(m => m.completed)\n  }\n\n  // Handle complete setup\n  const handleCompleteSetup = async () => {\n    if (!isSetupComplete()) return\n    \n    setLoading(true)\n    try {\n      // Update case status to \"Pending Approval\" via API\n      const response = await updateCase(case_.case_id, {\n        status: 'Pending Approval'\n      })\n      \n      if (response.error) {\n        console.error('Error updating case status:', response.error)\n        // Don't clear progress if API call failed\n        return\n      }\n      \n      // Clear the setup progress since it's complete\n      localStorage.removeItem(`case_setup_${case_.case_id}`)\n      \n      if (onProgressUpdate) {\n        onProgressUpdate()\n      }\n    } catch (error) {\n      console.error('Error completing case setup:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    loadProgress()\n  }, [case_.case_id])\n\n  const progress = getProgress()\n\n  return (\n    <div className=\"case-setup-tracker\">\n      <div className=\"setup-stepper\">\n        <ChevronStepper\n          steps={milestones.map(milestone => ({\n            id: milestone.id,\n            title: milestone.title,\n            completed: milestone.completed,\n            disabled: milestone.id === 'checklist' || milestone.id === 'approval'\n          }))}\n          currentStep={currentStep}\n          onStepClick={handleStepClick}\n          className=\"full-width\"\n        />\n      </div>\n\n      {/* Show content based on current step */}\n      {case_.status === 'Case Setup' && (\n        <div style={{ marginTop: 'var(--unit-6)' }}>\n          {currentStep === 'associations' && (\n            <div>\n              <h3>Associations</h3>\n              <p>Manage family associations and relationships for this case.</p>\n            </div>\n          )}\n          {currentStep === 'living_arrangements' && (\n            <div>\n              <h3>Living Arrangements</h3>\n              <p>Document current living arrangements for all children in this case.</p>\n            </div>\n          )}\n          {currentStep === 'services' && (\n            <div>\n              <h3>Services</h3>\n              <p>Set up and manage case services and support programs.</p>\n            </div>\n          )}\n          {currentStep === 'court' && (\n            <div>\n              <h3>Court</h3>\n              <p>Manage court information and legal documents for this case.</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {isSetupComplete() && (\n        <div className=\"setup-completion\" style={{ marginTop: 'var(--unit-6)' }}>\n          <div className=\"completion-message\">\n            <span className=\"icon\">celebration</span>\n            <h4>Case Setup Complete!</h4>\n            <p>All required steps have been completed. You can now submit for supervisor review.</p>\n          </div>\n          <button\n            onClick={handleCompleteSetup}\n            className=\"action-btn primary large\"\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"icon\">hourglass_empty</span>\n                Submitting...\n              </>\n            ) : (\n              <>\n                <span className=\"icon\">send</span>\n                Submit for Review\n              </>\n            )}\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}