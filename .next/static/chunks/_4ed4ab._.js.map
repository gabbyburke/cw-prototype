{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/api.ts"],"sourcesContent":["/**\n * API client for the Child Welfare Case Management System\n */\n\n// Use the direct Cloud Run service for local development\nconst API_BASE_URL = 'https://ccwis-core-case-mgmt-807576987550.us-central1.run.app'\n\nexport interface ApiResponse<T> {\n  data?: T\n  error?: string\n}\n\nexport interface Case {\n  case_id: string\n  case_number: string\n  case_display_name: string\n  status: string\n  priority_level: string\n  primary_child: string\n  family_name: string\n  allegation_type: string\n  allegation_description: string\n  county: string\n  created_date: string\n  last_updated: string\n  created_by: string\n  assigned_worker?: string\n  assigned_supervisor?: string\n  workflow_status: {\n    current_stage: string\n    cpw_reviewed: boolean\n    cpw_supervisor_approved: boolean\n    swcm_assigned: boolean\n  }\n  risk_level?: string\n  safety_factors?: string[]\n  safety_assessment_due?: string\n  assessment_notes?: string\n  persons?: Person[]\n  timeline_events?: TimelineEvent[]\n  case_notes?: CaseNote[]\n  documents?: Document[]\n  address?: {\n    street_address?: string\n    city?: string\n    state?: string\n    zipcode?: number\n  }\n}\n\nexport interface Person {\n  person_id: string\n  first_name: string\n  last_name: string\n  date_of_birth: string\n  role: string\n  contact_info: {\n    phone?: string\n    email?: string\n    address?: string\n  }\n  indicators?: string[]\n  relationship_to_primary_child?: string\n}\n\nexport interface TimelineEvent {\n  event_id: string\n  event_type: string\n  title: string\n  description: string\n  date: string\n  created_by: string\n  priority?: string\n}\n\nexport interface CaseNote {\n  note_id: string\n  text: string\n  created_by: string\n  created_date: string\n  note_type?: string\n  genai_summary?: string\n}\n\nexport interface Document {\n  document_id: string\n  title: string\n  type: string\n  uploaded_date: string\n  uploaded_by: string\n  file_size?: string\n  description?: string\n}\n\nclass ApiClient {\n  private baseUrl: string\n\n  constructor(baseUrl: string = API_BASE_URL) {\n    this.baseUrl = baseUrl\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    try {\n      const url = `${this.baseUrl}${endpoint}`\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        return {\n          error: errorData.error || `HTTP ${response.status}: ${response.statusText}`,\n        }\n      }\n\n      const data = await response.json()\n      return { data }\n    } catch (error) {\n      return {\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      }\n    }\n  }\n\n  // SWCM Supervisor endpoints\n  async getCasesPendingAssignment(): Promise<ApiResponse<{ cases: Case[] }>> {\n    return this.request<{ cases: Case[] }>('/swcm/cases/pending-assignment')\n  }\n\n  async assignCaseToSWCM(\n    caseId: string,\n    assignedWorker: string,\n    assignedSupervisor?: string\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/swcm/cases/${caseId}/assign`, {\n      method: 'POST',\n      body: JSON.stringify({\n        assigned_worker: assignedWorker,\n        assigned_supervisor: assignedSupervisor,\n      }),\n    })\n  }\n\n  // SWCM Worker endpoints\n  async getCasesByWorker(workerName: string): Promise<ApiResponse<{ cases: Case[] }>> {\n    return this.request<{ cases: Case[] }>(`/cases?assigned_worker=${encodeURIComponent(workerName)}`)\n  }\n\n  async getCaseById(caseId: string): Promise<ApiResponse<Case>> {\n    return this.request<Case>(`/cases/${caseId}`)\n  }\n\n  async getPersonsByCase(caseId: string): Promise<ApiResponse<{ persons: Person[] }>> {\n    return this.request<{ persons: Person[] }>(`/cases/${caseId}/persons`)\n  }\n\n  async getCaseNotes(caseId: string): Promise<ApiResponse<{ notes: CaseNote[] }>> {\n    return this.request<{ notes: CaseNote[] }>(`/cases/${caseId}/notes`)\n  }\n\n  async addCaseNote(\n    caseId: string,\n    noteText: string,\n    noteType?: string\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/cases/${caseId}/notes`, {\n      method: 'POST',\n      body: JSON.stringify({\n        note_text: noteText,\n        note_type: noteType || 'General',\n      }),\n    })\n  }\n\n  async updateCase(\n    caseId: string,\n    updates: Partial<Case>\n  ): Promise<ApiResponse<{ message: string }>> {\n    return this.request<{ message: string }>(`/cases/${caseId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    })\n  }\n\n  // Person search\n  async searchPersons(query: string): Promise<ApiResponse<{ persons: Person[] }>> {\n    return this.request<{ persons: Person[] }>(`/persons/search?q=${encodeURIComponent(query)}`)\n  }\n\n  // Get person by ID\n  async getPersonById(personId: string): Promise<ApiResponse<Person>> {\n    return this.request<Person>(`/persons/${personId}`)\n  }\n\n  // Health check\n  async healthCheck(): Promise<ApiResponse<{ status: string; service: string }>> {\n    return this.request<{ status: string; service: string }>('/health')\n  }\n}\n\n// Export singleton instance\nexport const apiClient = new ApiClient()\n\n// Export individual functions for convenience\nexport const getCasesPendingAssignment = () => apiClient.getCasesPendingAssignment()\nexport const assignCaseToSWCM = (caseId: string, assignedWorker: string, assignedSupervisor?: string) => \n  apiClient.assignCaseToSWCM(caseId, assignedWorker, assignedSupervisor)\nexport const getCasesByWorker = (workerName: string) => apiClient.getCasesByWorker(workerName)\nexport const getCaseById = (caseId: string) => apiClient.getCaseById(caseId)\nexport const getPersonsByCase = (caseId: string) => apiClient.getPersonsByCase(caseId)\nexport const getCaseNotes = (caseId: string) => apiClient.getCaseNotes(caseId)\nexport const addCaseNote = (caseId: string, noteText: string, noteType?: string) => \n  apiClient.addCaseNote(caseId, noteText, noteType)\nexport const updateCase = (caseId: string, updates: Partial<Case>) => \n  apiClient.updateCase(caseId, updates)\nexport const searchPersons = (query: string) => apiClient.searchPersons(query)\nexport const getPersonById = (personId: string) => apiClient.getPersonById(personId)\nexport const healthCheck = () => apiClient.healthCheck()\n\n// Magic Button data interface based on BigQuery schema\nexport interface MagicButtonData {\n  incident_number: string\n  child_first_names: string\n  child_last_names: string\n  parent_first_names: string\n  parent_last_names: string\n  cps_worker: string\n  due_date: string\n  county_of_assessment: string\n  intake_date: string\n  reported_native_american_heritage: string\n  perpetrators: string\n  perpetrator_first_name: string\n  perpetrator_last_name: string\n  findings: string\n  allegations: string\n  victims: string\n  victim_first_name: string\n  victim_last_name: string\n  person_id: string\n  role: string\n  gender: string\n  age_calculated: number\n  prior_workers: string\n  current_address: string\n  address_type: string\n  residence_county: string\n  date_of_birth: string\n  phone_number: string\n  phone_type: string\n  address: string\n  city: string\n  state: string\n  zip_code: number\n  non_custodial_parent: boolean\n  non_custodial_parent_person_id: string\n  non_custodial_parent_first_name: string\n  non_custodial_parent_last_name: string\n  non_custodial_parent_middle_name: string\n  non_custodial_parent_dob: string\n  non_custodial_parent_ssn: string\n  non_custodial_parent_suffix: string\n  non_custodial_parent_sex: string\n  non_custodial_parent_race: string\n  non_custodial_parent_ethnicity: string\n  legal_custodian: string\n  guardian: string\n  prior_assessment: string\n  type_of_appointment: string\n  clinic_name: string\n  appointment_date: string\n}\n\n// Search Magic Button data by incident number (mock implementation for now)\nexport const searchMagicButtonData = async (query: string): Promise<ApiResponse<{ incidents: MagicButtonData[] }>> => {\n  // Mock implementation - replace with real API call when backend is ready\n  await new Promise(resolve => setTimeout(resolve, 400))\n  \n  // Mock data for development\n  const mockIncidents: MagicButtonData[] = [\n    {\n      incident_number: \"INC-2024-001234\",\n      child_first_names: \"Emma\",\n      child_last_names: \"Johnson\", \n      parent_first_names: \"Michael, Sarah\",\n      parent_last_names: \"Johnson, Johnson\",\n      cps_worker: \"Dana Wilson\",\n      due_date: \"2024-09-15\",\n      county_of_assessment: \"King County\",\n      intake_date: \"2024-08-15\",\n      reported_native_american_heritage: \"No\",\n      perpetrators: \"Michael Johnson\",\n      perpetrator_first_name: \"Michael\",\n      perpetrator_last_name: \"Johnson\",\n      findings: \"Substantiated\",\n      allegations: \"Physical abuse\",\n      victims: \"Emma Johnson\",\n      victim_first_name: \"Emma\", \n      victim_last_name: \"Johnson\",\n      person_id: \"12345\",\n      role: \"Client\",\n      gender: \"Female\",\n      age_calculated: 8,\n      prior_workers: \"None\",\n      current_address: \"123 Main St\",\n      address_type: \"Residential\",\n      residence_county: \"King County\",\n      date_of_birth: \"2016-03-12\",\n      phone_number: \"206-555-0123\",\n      phone_type: \"Home\",\n      address: \"123 Main St\",\n      city: \"Seattle\",\n      state: \"WA\",\n      zip_code: 98101,\n      non_custodial_parent: false,\n      non_custodial_parent_person_id: \"\",\n      non_custodial_parent_first_name: \"\",\n      non_custodial_parent_last_name: \"\",\n      non_custodial_parent_middle_name: \"\",\n      non_custodial_parent_dob: \"\",\n      non_custodial_parent_ssn: \"\",\n      non_custodial_parent_suffix: \"\",\n      non_custodial_parent_sex: \"\",\n      non_custodial_parent_race: \"\",\n      non_custodial_parent_ethnicity: \"\",\n      legal_custodian: \"Sarah Johnson\",\n      guardian: \"\",\n      prior_assessment: \"None\",\n      type_of_appointment: \"\",\n      clinic_name: \"\",\n      appointment_date: \"\"\n    }\n  ]\n  \n  if (!query || query.length < 2) {\n    return { data: { incidents: [] }, error: undefined }\n  }\n  \n  const filteredIncidents = mockIncidents.filter(incident => \n    incident.incident_number.toLowerCase().includes(query.toLowerCase()) ||\n    incident.child_first_names.toLowerCase().includes(query.toLowerCase()) ||\n    incident.child_last_names.toLowerCase().includes(query.toLowerCase()) ||\n    incident.allegations.toLowerCase().includes(query.toLowerCase())\n  )\n  \n  return { data: { incidents: filteredIncidents }, error: undefined }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/RequestSWCMAssignmentModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Case, Person, updateCase, searchPersons } from '../lib/api'\nimport MagicSearchModal from './MagicSearchModal'\n\ninterface RequestSWCMAssignmentModalProps {\n  isOpen: boolean\n  onClose: () => void\n  case_: Case | null\n  onSuccess: () => void\n}\n\ninterface SetupStep {\n  id: number\n  title: string\n  description: string\n  completed: boolean\n}\n\ninterface SavedSetupData {\n  caseId: string\n  currentStep: number\n  casePersons: Person[]\n  allegations: {\n    type: string\n    description: string\n  }\n  assessments: {\n    risk_level: 'Low' | 'Medium' | 'High' | 'Very High'\n    safety_factors: string[]\n    assessment_notes: string\n    risk_confirmed: boolean\n    safety_confirmed: boolean\n  }\n  finalConfirmation: {\n    cpw_notes: string\n    ready_for_assignment: boolean\n  }\n  lastSaved: string\n}\n\nexport default function RequestSWCMAssignmentModal({ isOpen, onClose, case_, onSuccess }: RequestSWCMAssignmentModalProps) {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  \n  // Step 1: Case membership\n  const [casePersons, setCasePersons] = useState<Person[]>([])\n  const [showAddPersonForm, setShowAddPersonForm] = useState(false)\n  const [showPersonSearch, setShowPersonSearch] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [searchResults, setSearchResults] = useState<Person[]>([])\n  const [searchLoading, setSearchLoading] = useState(false)\n  const [selectedRole, setSelectedRole] = useState<'Parent' | 'Non-Resident Parent' | 'Client' | 'Guardian' | 'Relative' | 'Family Support'>('Parent')\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null)\n  const [newPersonData, setNewPersonData] = useState({\n    first_name: '',\n    last_name: '',\n    date_of_birth: '',\n    role: 'Parent' as 'Parent' | 'Non-Resident Parent' | 'Client' | 'Guardian' | 'Relative' | 'Family Support'\n  })\n  \n  // Step 2: Allegations\n  const [allegations, setAllegations] = useState({\n    type: '',\n    description: ''\n  })\n  \n  // Step 3: Assessments\n  const [assessments, setAssessments] = useState({\n    risk_level: 'Medium' as 'Low' | 'Medium' | 'High' | 'Very High',\n    safety_factors: [] as string[],\n    assessment_notes: '',\n    risk_confirmed: false,\n    safety_confirmed: false\n  })\n  \n  // Common safety factors for quick selection\n  const commonSafetyFactors = [\n    'Physical injury to child',\n    'Sexual abuse allegation',\n    'Domestic violence',\n    'Substance abuse concerns',\n    'Inadequate supervision',\n    'Unsafe living conditions',\n    'Mental health concerns',\n    'Medical neglect',\n    'Educational neglect',\n    'Child disclosure',\n    'Perpetrator has access',\n    'Young child age',\n    'Chronic health conditions'\n  ]\n  \n  const [newSafetyFactor, setNewSafetyFactor] = useState('')\n  \n  // Step 4: Final confirmation\n  const [finalConfirmation, setFinalConfirmation] = useState({\n    cpw_notes: '',\n    ready_for_assignment: false\n  })\n\n  const steps: SetupStep[] = [\n    {\n      id: 1,\n      title: 'Review Case Details',\n      description: 'Name case, add safety concerns, and review case information',\n      completed: allegations.type !== '' && allegations.description !== ''\n    },\n    {\n      id: 2,\n      title: 'Verify Case Membership',\n      description: 'Review and add people involved in the case',\n      completed: casePersons.length > 0\n    },\n    {\n      id: 3,\n      title: 'Update Living Arrangements',\n      description: 'Set living arrangements for all children/clients',\n      completed: assessments.risk_confirmed && assessments.safety_confirmed\n    },\n    {\n      id: 4,\n      title: 'Request SWCM Assignment',\n      description: 'Finalize case setup and request SWCM',\n      completed: finalConfirmation.ready_for_assignment\n    }\n  ]\n\n  // Save/Resume functionality\n  const getStorageKey = (caseId: string) => `cpw_assignment_${caseId}`\n\n  const saveProgress = () => {\n    if (!case_) return\n\n    const savedData: SavedSetupData = {\n      caseId: case_.case_id,\n      currentStep,\n      casePersons,\n      allegations,\n      assessments,\n      finalConfirmation,\n      lastSaved: new Date().toISOString()\n    }\n\n    localStorage.setItem(getStorageKey(case_.case_id), JSON.stringify(savedData))\n  }\n\n  const loadSavedProgress = (caseId: string): SavedSetupData | null => {\n    try {\n      const saved = localStorage.getItem(getStorageKey(caseId))\n      return saved ? JSON.parse(saved) : null\n    } catch (error) {\n      console.error('Error loading saved progress:', error)\n      return null\n    }\n  }\n\n  const clearSavedProgress = (caseId: string) => {\n    localStorage.removeItem(getStorageKey(caseId))\n  }\n\n  useEffect(() => {\n    if (isOpen && case_) {\n      // Check for saved progress first\n      const savedProgress = loadSavedProgress(case_.case_id)\n      \n      if (savedProgress) {\n        // Restore saved progress\n        setCurrentStep(savedProgress.currentStep)\n        setCasePersons(savedProgress.casePersons)\n        setAllegations(savedProgress.allegations)\n        setAssessments(savedProgress.assessments)\n        setFinalConfirmation(savedProgress.finalConfirmation)\n      } else {\n        // Initialize data from case\n        setCasePersons(case_.persons || [])\n        setAllegations({\n          type: case_.allegation_type || '',\n          description: case_.allegation_description || ''\n        })\n        setAssessments({\n          risk_level: (case_.risk_level as 'Low' | 'Medium' | 'High' | 'Very High') || 'Medium',\n          safety_factors: case_.safety_factors || [],\n          assessment_notes: case_.assessment_notes || '',\n          risk_confirmed: false,\n          safety_confirmed: false\n        })\n        setFinalConfirmation({\n          cpw_notes: '',\n          ready_for_assignment: false\n        })\n        setCurrentStep(1)\n      }\n      setError(null)\n    }\n  }, [isOpen, case_])\n\n  // Auto-save progress when data changes (but only save to localStorage, not to API)\n  useEffect(() => {\n    if (isOpen && case_) {\n      const timeoutId = setTimeout(() => {\n        saveProgress() // This only saves to localStorage, not to the API\n      }, 1000) // Auto-save after 1 second of inactivity\n\n      return () => clearTimeout(timeoutId)\n    }\n  }, [isOpen, case_, currentStep, casePersons, allegations, assessments, finalConfirmation])\n\n  const handleAddPerson = () => {\n    if (!newPersonData.first_name || !newPersonData.last_name) {\n      setError('First name and last name are required')\n      return\n    }\n\n    const newPerson: Person = {\n      person_id: `temp_${Date.now()}`,\n      first_name: newPersonData.first_name,\n      last_name: newPersonData.last_name,\n      date_of_birth: newPersonData.date_of_birth,\n      role: newPersonData.role.toLowerCase(),\n      contact_info: {\n        phone: undefined,\n        email: undefined,\n        address: undefined\n      },\n      indicators: [],\n      relationship_to_primary_child: newPersonData.role\n    }\n\n    setCasePersons([...casePersons, newPerson])\n    setNewPersonData({\n      first_name: '',\n      last_name: '',\n      date_of_birth: '',\n      role: 'Parent'\n    })\n    setShowAddPersonForm(false)\n    setError(null)\n  }\n\n  const handleRemovePerson = (personId: string) => {\n    setCasePersons(casePersons.filter(p => p.person_id !== personId))\n  }\n\n  // Person search functionality\n  const handleSearchPersons = async (query: string) => {\n    if (query.length < 2) {\n      setSearchResults([])\n      return\n    }\n\n    setSearchLoading(true)\n    try {\n      const response = await searchPersons(query)\n      if (response.error) {\n        setError(response.error)\n        setSearchResults([])\n      } else if (response.data) {\n        setSearchResults(response.data.persons)\n      }\n    } catch (err) {\n      setError('Failed to search persons')\n      setSearchResults([])\n    } finally {\n      setSearchLoading(false)\n    }\n  }\n\n  const handleAddExistingPerson = (person: Person) => {\n    // Check if person is already in the case\n    if (casePersons.some(p => p.person_id === person.person_id)) {\n      setError('This person is already added to the case')\n      return\n    }\n\n    // Add person with selected role\n    const personWithRole: Person = {\n      ...person,\n      role: selectedRole.toLowerCase(),\n      relationship_to_primary_child: selectedRole\n    }\n\n    setCasePersons([...casePersons, personWithRole])\n    setShowPersonSearch(false)\n    setSearchQuery('')\n    setSearchResults([])\n    setError(null)\n  }\n\n  // Debounced search\n  useEffect(() => {\n    if (searchQuery) {\n      const timeoutId = setTimeout(() => {\n        handleSearchPersons(searchQuery)\n      }, 300)\n      return () => clearTimeout(timeoutId)\n    } else {\n      setSearchResults([])\n    }\n  }, [searchQuery])\n\n  const handleNextStep = () => {\n    if (currentStep < 4) {\n      setCurrentStep(currentStep + 1)\n    }\n  }\n\n  const handlePreviousStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1)\n    }\n  }\n\n  const handleFinishSetup = async () => {\n    if (!case_) return\n\n    setLoading(true)\n    setError(null)\n\n    try {\n      // Update case with final data and change status to \"Pending Assignment\"\n      const updates = {\n        allegation_type: allegations.type,\n        allegation_description: allegations.description,\n        risk_level: assessments.risk_level,\n        safety_factors: assessments.safety_factors,\n        assessment_notes: assessments.assessment_notes,\n        status: 'Pending Assignment'\n      }\n\n      const response = await updateCase(case_.case_id, updates)\n      \n      if (response.error) {\n        setError(response.error)\n      } else {\n        // Clear saved progress since setup is complete\n        clearSavedProgress(case_.case_id)\n        onSuccess()\n        onClose()\n      }\n    } catch (err) {\n      setError('Failed to request SWCM assignment')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (!isOpen || !case_) return null\n\n  const handleOverlayClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose()\n    }\n  }\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"modal-container large scrollable\" style={{ maxHeight: '90vh', overflow: 'hidden' }}>\n        <div className=\"modal-header\">\n          <h2>Request SWCM Assignment - {case_.case_display_name || `Case ${case_.case_id}`}</h2>\n          <button onClick={onClose} className=\"modal-close\">\n            <span className=\"icon\">close</span>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          {/* Compact Step Navigation */}\n          <div className=\"compact-step-nav\">\n            {steps.map((step) => (\n              <button\n                key={step.id}\n                className={`compact-step ${currentStep === step.id ? 'active' : ''} ${step.completed ? 'completed' : ''}`}\n                onClick={() => setCurrentStep(step.id)}\n              >\n                <div className=\"step-number\">\n                  {step.completed ? <span className=\"icon\">check</span> : step.id}\n                </div>\n                <span className=\"step-title\">{step.title}</span>\n              </button>\n            ))}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              <span className=\"icon\">error</span>\n              {error}\n            </div>\n          )}\n\n          {/* Step 1: Review Case Details */}\n          {currentStep === 1 && (\n            <div className=\"setup-step\">\n              <h3>Step 1: Review Case Details</h3>\n              <p>Name this case, add family safety concerns, and review case information before requesting SWCM assignment.</p>\n              \n              <div className=\"form-group\">\n                <label>Name this case *</label>\n                <input\n                  type=\"text\"\n                  value={allegations.description}\n                  onChange={(e) => setAllegations({...allegations, description: e.target.value})}\n                  placeholder=\"Enter a descriptive name for this case...\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Add family safety concerns</label>\n                <textarea\n                  value={assessments.assessment_notes}\n                  onChange={(e) => setAssessments({...assessments, assessment_notes: e.target.value})}\n                  placeholder=\"Describe any family safety concerns...\"\n                  rows={3}\n                />\n              </div>\n              \n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label>Safety Plan</label>\n                  <div className=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"safety_plan\"\n                        value=\"yes\"\n                        checked={assessments.safety_factors.includes('Safety Plan Required')}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setAssessments({\n                              ...assessments,\n                              safety_factors: [...assessments.safety_factors.filter(f => !f.includes('Safety Plan')), 'Safety Plan Required']\n                            })\n                          }\n                        }}\n                      />\n                      Yes\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"safety_plan\"\n                        value=\"no\"\n                        checked={!assessments.safety_factors.includes('Safety Plan Required')}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setAssessments({\n                              ...assessments,\n                              safety_factors: assessments.safety_factors.filter(f => !f.includes('Safety Plan'))\n                            })\n                          }\n                        }}\n                      />\n                      No\n                    </label>\n                  </div>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Family Preservation</label>\n                  <div className=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"family_preservation\"\n                        value=\"yes\"\n                        checked={assessments.safety_factors.includes('Family Preservation Services')}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setAssessments({\n                              ...assessments,\n                              safety_factors: [...assessments.safety_factors.filter(f => !f.includes('Family Preservation')), 'Family Preservation Services']\n                            })\n                          }\n                        }}\n                      />\n                      Yes\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"family_preservation\"\n                        value=\"no\"\n                        checked={!assessments.safety_factors.includes('Family Preservation Services')}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setAssessments({\n                              ...assessments,\n                              safety_factors: assessments.safety_factors.filter(f => !f.includes('Family Preservation'))\n                            })\n                          }\n                        }}\n                      />\n                      No\n                    </label>\n                  </div>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Prior Service Case</label>\n                  <div className=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"prior_service\"\n                        value=\"yes\"\n                        checked={assessments.safety_factors.includes('Prior Service Case')}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setAssessments({\n                              ...assessments,\n                              safety_factors: [...assessments.safety_factors.filter(f => !f.includes('Prior Service')), 'Prior Service Case']\n                            })\n                          }\n                        }}\n                      />\n                      Yes\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"prior_service\"\n                        value=\"no\"\n                        checked={!assessments.safety_factors.includes('Prior Service Case')}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setAssessments({\n                              ...assessments,\n                              safety_factors: assessments.safety_factors.filter(f => !f.includes('Prior Service'))\n                            })\n                          }\n                        }}\n                      />\n                      No\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label>Service Area Assigned</label>\n                  <input\n                    type=\"text\"\n                    value={allegations.type}\n                    onChange={(e) => setAllegations({...allegations, type: e.target.value})}\n                    placeholder=\"Will be pre-filled from Magic Button\"\n                    disabled\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Residence County</label>\n                  <input\n                    type=\"text\"\n                    value={case_?.county || ''}\n                    placeholder=\"Will be pre-filled from Magic Button\"\n                    disabled\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Financial County</label>\n                  <input\n                    type=\"text\"\n                    value={case_?.county || ''}\n                    placeholder=\"Will be pre-filled from Magic Button\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Case Membership */}\n          {currentStep === 2 && (\n            <div className=\"setup-step\">\n              <h3>Step 2: Verify Case Membership</h3>\n              <p>Review the people involved in this case and add any missing individuals before assignment.</p>\n              \n              <div className=\"persons-list\">\n                {casePersons.map((person) => (\n                  <div key={person.person_id} className=\"person-item\">\n                    <div className=\"person-info\">\n                      <strong>{person.first_name} {person.last_name}</strong>\n                      <span className=\"person-role\">{person.role}</span>\n                      {person.date_of_birth && (\n                        <span className=\"person-age\">\n                          Age: {Math.floor((new Date().getTime() - new Date(person.date_of_birth).getTime()) / (365.25 * 24 * 60 * 60 * 1000))}\n                        </span>\n                      )}\n                    </div>\n                    <button \n                      onClick={() => handleRemovePerson(person.person_id)}\n                      className=\"action-btn small error\"\n                    >\n                      <span className=\"icon\">remove</span>\n                      Remove\n                    </button>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"person-search-section\">\n                <div className=\"form-group\">\n                  <label>Search for a person or add new</label>\n                  <input\n                    type=\"text\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    placeholder=\"Start typing a person's name...\"\n                  />\n                </div>\n\n                {searchLoading && (\n                  <div className=\"search-loading\">\n                    <span className=\"icon\">hourglass_empty</span>\n                    Searching...\n                  </div>\n                )}\n\n                {searchResults.length > 0 && (\n                  <div className=\"search-results\">\n                    <h5>Found {searchResults.length} person(s)</h5>\n                    {searchResults.map((person) => (\n                      <div key={person.person_id} className=\"search-result-item\">\n                        <div className=\"person-info\">\n                          <strong>{person.first_name} {person.last_name}</strong>\n                          {person.date_of_birth && (\n                            <span className=\"person-age\">\n                              Age: {Math.floor((new Date().getTime() - new Date(person.date_of_birth).getTime()) / (365.25 * 24 * 60 * 60 * 1000))}\n                            </span>\n                          )}\n                          {person.contact_info?.address && (\n                            <span className=\"person-address\">{person.contact_info.address}</span>\n                          )}\n                        </div>\n                        <button \n                          onClick={() => {\n                            if (!casePersons.some(p => p.person_id === person.person_id)) {\n                              setShowPersonSearch(true)\n                              setSelectedRole('Parent')\n                              // Store the selected person for role assignment\n                              setSelectedPerson(person)\n                            }\n                          }}\n                          className=\"action-btn small primary\"\n                          disabled={casePersons.some(p => p.person_id === person.person_id)}\n                        >\n                          {casePersons.some(p => p.person_id === person.person_id) ? 'Already Added' : 'Select'}\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {searchQuery.length >= 2 && !searchLoading && searchResults.length === 0 && (\n                  <div className=\"no-results\">\n                    <div className=\"no-results-content\">\n                      <span className=\"icon\">search_off</span>\n                      <p>No persons found matching \"{searchQuery}\"</p>\n                      <button \n                        onClick={() => setShowAddPersonForm(true)}\n                        className=\"action-btn primary\"\n                      >\n                        <span className=\"icon\">person_add</span>\n                        Add \"{searchQuery}\" as New Person\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {searchQuery.length === 0 && (\n                  <div className=\"search-help\">\n                    <p>Start typing to search for existing people, or</p>\n                    <button \n                      onClick={() => setShowAddPersonForm(true)}\n                      className=\"action-btn secondary\"\n                    >\n                      <span className=\"icon\">person_add</span>\n                      Add New Person\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              {showPersonSearch && selectedPerson && (\n                <div className=\"role-selection-form\">\n                  <h4>Select Role for {selectedPerson.first_name} {selectedPerson.last_name}</h4>\n                  <div className=\"form-group\">\n                    <label>Role in Case</label>\n                    <select\n                      value={selectedRole}\n                      onChange={(e) => setSelectedRole(e.target.value as any)}\n                    >\n                      <option value=\"Parent\">Parent</option>\n                      <option value=\"Non-Resident Parent\">Non-Resident Parent</option>\n                      <option value=\"Client\">Client</option>\n                      <option value=\"Guardian\">Guardian</option>\n                      <option value=\"Relative\">Relative</option>\n                      <option value=\"Family Support\">Family Support</option>\n                    </select>\n                  </div>\n                  <div className=\"form-actions\">\n                    <button \n                      onClick={() => {\n                        handleAddExistingPerson(selectedPerson)\n                        setShowPersonSearch(false)\n                        setSelectedPerson(null)\n                      }}\n                      className=\"action-btn primary\"\n                    >\n                      <span className=\"icon\">add</span>\n                      Add to Case\n                    </button>\n                    <button \n                      onClick={() => {\n                        setShowPersonSearch(false)\n                        setSelectedPerson(null)\n                      }} \n                      className=\"action-btn secondary\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {showAddPersonForm && (\n                <div className=\"add-person-form\">\n                  <h4>Add New Person</h4>\n                  <div className=\"form-grid\">\n                    <div className=\"form-group\">\n                      <label>First Name *</label>\n                      <input\n                        type=\"text\"\n                        value={newPersonData.first_name}\n                        onChange={(e) => setNewPersonData({...newPersonData, first_name: e.target.value})}\n                        placeholder=\"Enter first name\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Last Name *</label>\n                      <input\n                        type=\"text\"\n                        value={newPersonData.last_name}\n                        onChange={(e) => setNewPersonData({...newPersonData, last_name: e.target.value})}\n                        placeholder=\"Enter last name\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Date of Birth</label>\n                      <input\n                        type=\"date\"\n                        value={newPersonData.date_of_birth}\n                        onChange={(e) => setNewPersonData({...newPersonData, date_of_birth: e.target.value})}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Relationship to Case *</label>\n                      <select\n                        value={newPersonData.role}\n                        onChange={(e) => setNewPersonData({...newPersonData, role: e.target.value as any})}\n                      >\n                        <option value=\"Parent\">Parent</option>\n                        <option value=\"Non-Resident Parent\">Non-Resident Parent</option>\n                        <option value=\"Client\">Client</option>\n                        <option value=\"Guardian\">Guardian</option>\n                        <option value=\"Relative\">Relative</option>\n                        <option value=\"Family Support\">Family Support</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"form-actions\">\n                    <button onClick={handleAddPerson} className=\"action-btn primary\">\n                      <span className=\"icon\">add</span>\n                      Add Person\n                    </button>\n                    <button \n                      onClick={() => setShowAddPersonForm(false)} \n                      className=\"action-btn secondary\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Step 3: Update Living Arrangements */}\n          {currentStep === 3 && (\n            <div className=\"setup-step\">\n              <h3>Step 3: Update Living Arrangements</h3>\n              <p>Set living arrangements for all children/clients before requesting SWCM assignment.</p>\n              \n              <div className=\"living-arrangements-section\">\n                {casePersons.filter(person => person.role.toLowerCase() === 'client' || person.role.toLowerCase() === 'child').length > 0 ? (\n                  casePersons\n                    .filter(person => person.role.toLowerCase() === 'client' || person.role.toLowerCase() === 'child')\n                    .map((child) => (\n                      <div key={child.person_id} className=\"child-living-arrangement\">\n                        <h4>{child.first_name} {child.last_name}</h4>\n                        <div className=\"form-grid\">\n                          <div className=\"form-group\">\n                            <label>Living Arrangement Type *</label>\n                            <select\n                              value=\"\"\n                              onChange={(e) => {\n                                // TODO: Store living arrangement data\n                                console.log(`Living arrangement for ${child.first_name}: ${e.target.value}`)\n                              }}\n                            >\n                              <option value=\"\">Select arrangement type</option>\n                              <option value=\"With Parent/Guardian\">With Parent/Guardian</option>\n                              <option value=\"Foster Care\">Foster Care</option>\n                              <option value=\"Kinship Care\">Kinship Care</option>\n                              <option value=\"Group Home\">Group Home</option>\n                              <option value=\"Residential Treatment\">Residential Treatment</option>\n                              <option value=\"Independent Living\">Independent Living</option>\n                              <option value=\"Other\">Other</option>\n                            </select>\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label>Name and Location *</label>\n                            <input\n                              type=\"text\"\n                              placeholder=\"Enter caregiver name and location\"\n                              onChange={(e) => {\n                                // TODO: Store location data\n                                console.log(`Location for ${child.first_name}: ${e.target.value}`)\n                              }}\n                            />\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label>Start Date *</label>\n                            <input\n                              type=\"date\"\n                              onChange={(e) => {\n                                // TODO: Store start date\n                                console.log(`Start date for ${child.first_name}: ${e.target.value}`)\n                              }}\n                            />\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label>End Date</label>\n                            <input\n                              type=\"date\"\n                              onChange={(e) => {\n                                // TODO: Store end date\n                                console.log(`End date for ${child.first_name}: ${e.target.value}`)\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                ) : (\n                  <div className=\"no-children-notice\">\n                    <span className=\"icon\">info</span>\n                    <p>No children/clients found in this case. Please add children in Step 2 before requesting assignment.</p>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"form-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={assessments.risk_confirmed}\n                    onChange={(e) => setAssessments({...assessments, risk_confirmed: e.target.checked})}\n                  />\n                  I confirm all living arrangements have been reviewed and updated\n                </label>\n              </div>\n            </div>\n          )}\n\n\n          {/* Step 4: Final Confirmation */}\n          {currentStep === 4 && (\n            <div className=\"setup-step\">\n              <h3>Step 4: Request SWCM Assignment</h3>\n              <p>Review all information and request assignment to a Social Work Case Manager.</p>\n              \n              <div className=\"setup-summary\">\n                <h4>Assignment Request Summary</h4>\n                <div className=\"summary-item\">\n                  <strong>People Involved:</strong> {casePersons.length} person(s)\n                </div>\n                <div className=\"summary-item\">\n                  <strong>Allegation:</strong> {allegations.type}\n                </div>\n                <div className=\"summary-item\">\n                  <strong>Risk Level:</strong> {assessments.risk_level}\n                </div>\n                <div className=\"summary-item\">\n                  <strong>Ready for Assignment:</strong> {assessments.risk_confirmed ? 'Yes' : 'No'}\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>CPW Notes (Optional)</label>\n                <textarea\n                  value={finalConfirmation.cpw_notes}\n                  onChange={(e) => setFinalConfirmation({...finalConfirmation, cpw_notes: e.target.value})}\n                  placeholder=\"Add any additional notes for the SWCM...\"\n                  rows={3}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={finalConfirmation.ready_for_assignment}\n                    onChange={(e) => setFinalConfirmation({...finalConfirmation, ready_for_assignment: e.target.checked})}\n                  />\n                  I confirm this case is ready for SWCM assignment and all required information has been reviewed\n                </label>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-footer\">\n          <div className=\"modal-actions\">\n            <button onClick={onClose} className=\"action-btn secondary\">\n              Cancel\n            </button>\n            \n            {currentStep > 1 && (\n              <button onClick={handlePreviousStep} className=\"action-btn secondary\">\n                <span className=\"icon\">arrow_back</span>\n                Previous\n              </button>\n            )}\n            \n            {currentStep < 4 ? (\n              <button \n                onClick={handleNextStep} \n                className=\"action-btn primary\"\n              >\n                Next\n                <span className=\"icon\">arrow_forward</span>\n              </button>\n            ) : (\n              <button \n                onClick={handleFinishSetup} \n                className=\"action-btn primary\"\n                disabled={!finalConfirmation.ready_for_assignment || loading}\n              >\n                {loading ? 'Requesting Assignment...' : 'Request SWCM Assignment'}\n                <span className=\"icon\">assignment_ind</span>\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2298, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/cpw/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport Link from 'next/link'\nimport { Case, getCasesByWorker } from '../../lib/api'\nimport { getCurrentUser } from '../../lib/mockData'\nimport RequestSWCMAssignmentModal from '../../components/RequestSWCMAssignmentModal'\nimport TaskTable from '../../components/TaskTable'\n\nexport default function CPWPage() {\n  const [activeFilters, setActiveFilters] = useState<string[]>(['Draft Cases'])\n  const [cases, setCases] = useState<Case[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [isSetupModalOpen, setIsSetupModalOpen] = useState(false)\n  const [selectedCase, setSelectedCase] = useState<Case | null>(null)\n  const [activeTask, setActiveTask] = useState<string | null>(null)\n  const [searchQuery, setSearchQuery] = useState('')\n\n  useEffect(() => {\n    loadCases()\n  }, [])\n\n  const loadCases = async () => {\n    setLoading(true)\n    setError(null)\n    \n    // For demo: show unassigned cases since no workers are assigned yet in the workflow\n    const response = await getCasesByWorker('unassigned')\n    \n    if (response.error) {\n      setError(response.error)\n    } else if (response.data) {\n      setCases(response.data.cases)\n    }\n    \n    setLoading(false)\n  }\n\n  const getIndicatorIcon = (indicator: string) => {\n    switch (indicator.toLowerCase()) {\n      case 'allergy': return 'medical_services'\n      case 'icwa eligible': return 'diversity_3'\n      case 'runaway': return 'directions_run'\n      case 'worker safety': return 'security'\n      case 'protective order': return 'gavel'\n      case 'icpc': return 'swap_horiz'\n      case 'safe haven': return 'shield'\n      case 'chronic medical condition': return 'local_hospital'\n      default: return 'flag'\n    }\n  }\n\n  const getIndicatorColor = (indicator: string) => {\n    switch (indicator.toLowerCase()) {\n      case 'allergy': return 'error'\n      case 'icwa eligible': return 'tertiary'\n      case 'runaway': return 'error'\n      case 'worker safety': return 'error'\n      case 'protective order': return 'secondary'\n      case 'chronic medical condition': return 'secondary'\n      default: return 'primary'\n    }\n  }\n\n  const getChildrenNames = (case_: Case) => {\n    if (!case_.persons) return null\n    const children = case_.persons.filter(person => person.role === 'Client')\n    if (children.length === 0) return null\n    \n    return children.map((child, index) => (\n      <span key={child.person_id}>\n        <Link href={`/persons/${child.person_id}`} className=\"child-link\">\n          {child.first_name} {child.last_name}\n        </Link>\n        {index < children.length - 1 && ', '}\n      </span>\n    ))\n  }\n\n  const getAllIndicators = (case_: Case) => {\n    const indicators = new Set<string>()\n    if (case_.persons) {\n      case_.persons.forEach(person => {\n        if (person.indicators) {\n          person.indicators.forEach(indicator => indicators.add(indicator))\n        }\n      })\n    }\n    return Array.from(indicators)\n  }\n\n  const handleSetupCase = (case_: Case) => {\n    setSelectedCase(case_)\n    setIsSetupModalOpen(true)\n  }\n\n  const handleStartCaseSetup = (case_: Case) => {\n    // TODO: Open comprehensive case setup modal/component\n    // For now, navigate to case details page\n    window.location.href = `/cases/${case_.case_id}`\n  }\n\n  const hasSavedProgress = (caseId: string) => {\n    try {\n      const saved = localStorage.getItem(`cpw_setup_${caseId}`)\n      return saved !== null\n    } catch (error) {\n      return false\n    }\n  }\n\n  const getSetupProgress = (caseId: string) => {\n    try {\n      const saved = localStorage.getItem(`cpw_setup_${caseId}`)\n      if (!saved) return { step: 0, total: 4, percentage: 0 }\n      \n      const data = JSON.parse(saved)\n      const currentStep = data.currentStep || 1\n      const total = 4\n      const percentage = Math.round((currentStep / total) * 100)\n      \n      return { step: currentStep, total, percentage }\n    } catch (error) {\n      return { step: 0, total: 4, percentage: 0 }\n    }\n  }\n\n  const handleSetupSuccess = () => {\n    setIsSetupModalOpen(false)\n    setSelectedCase(null)\n    loadCases() // Reload cases to reflect status changes\n  }\n\n  const handleCloseModal = () => {\n    setIsSetupModalOpen(false)\n    setSelectedCase(null)\n  }\n\n  // Handle task card clicks - toggle between showing task view and default view\n  const handleTaskCardClick = (taskType: string) => {\n    if (activeTask === taskType) {\n      // If clicking the same task, toggle it off\n      setActiveTask(null)\n    } else {\n      // Set the new active task\n      setActiveTask(taskType)\n    }\n  }\n\n  // Get cases for the active task\n  const getTaskCases = (taskType: string) => {\n    switch (taskType) {\n      case 'request-assignment':\n        return cases.filter(c => c.status.toLowerCase() === 'draft')\n      case 'edits-required':\n        return cases.filter(c => c.status.toLowerCase() === 'edits required')\n      case 'case-setup':\n        return cases.filter(c => c.status.toLowerCase() === 'case setup')\n      default:\n        return []\n    }\n  }\n\n\n\n  // Define available filter tags\n  const filterTags = [\n    { id: 'pending-assignment', label: 'Pending Assignment', status: ['Pending Assignment'], count: cases.filter(c => c.status === 'Pending Assignment').length },\n    { id: 'pending-approval', label: 'Pending Approval', status: ['Pending Approval'], count: cases.filter(c => c.status === 'Pending Approval').length },\n    { id: 'ready-swcm-assignment', label: 'Ready for SWCM Assignment', status: ['Draft'], count: cases.filter(c => c.status === 'Draft').length },\n    { id: 'case-setup', label: 'Case Setup', status: ['Case Setup'], count: cases.filter(c => c.status === 'Case Setup').length },\n    { id: 'active', label: 'Active', status: ['Active'], count: cases.filter(c => c.status === 'Active').length }\n  ]\n\n  // Toggle filter tag\n  const toggleFilter = (tagId: string) => {\n    const tag = filterTags.find(t => t.id === tagId)\n    if (!tag) return\n\n    setActiveFilters(prev => {\n      const isActive = prev.includes(tag.label)\n      if (isActive) {\n        return prev.filter(f => f !== tag.label)\n      } else {\n        return [...prev, tag.label]\n      }\n    })\n  }\n\n  // Filter cases based on active filters\n  const filteredCases = cases.filter(case_ => {\n    if (activeFilters.length === 0) return true\n    \n    return filterTags.some(tag => \n      activeFilters.includes(tag.label) && tag.status.includes(case_.status)\n    )\n  })\n\n  // Get action button for case based on status\n  const getCaseActionButton = (case_: Case, taskType?: string) => {\n    // Handle task-specific actions first\n    if (taskType === 'request-assignment') {\n      return (\n        <button \n          onClick={() => handleSetupCase(case_)}\n          className=\"action-btn small primary\"\n          title=\"Request SWCM Assignment\"\n        >\n          <span className=\"icon\">assignment_ind</span>\n          Request Assignment\n        </button>\n      )\n    }\n\n    if (taskType === 'case-setup') {\n      return (\n        <button \n          onClick={() => handleStartCaseSetup(case_)}\n          className=\"action-btn small primary\"\n          title={hasSavedProgress(case_.case_id) ? 'Resume case setup progress' : 'Start comprehensive case setup'}\n        >\n          <span className=\"icon\">{hasSavedProgress(case_.case_id) ? 'play_arrow' : 'settings'}</span>\n          {hasSavedProgress(case_.case_id) ? 'Resume Setup' : 'Start Setup'}\n        </button>\n      )\n    }\n\n    if (taskType === 'edits-required') {\n      return (\n        <button \n          onClick={() => console.log('Handle edits required for case:', case_.case_id)}\n          className=\"action-btn small error\"\n          title=\"Address required edits\"\n        >\n          <span className=\"icon\">edit</span>\n          Address Edits\n        </button>\n      )\n    }\n\n    // Fall back to status-based actions\n    switch (case_.status) {\n      case 'Draft':\n        return (\n          <button \n            onClick={() => handleSetupCase(case_)}\n            className=\"action-btn small primary\"\n            title=\"Request SWCM Assignment\"\n          >\n            <span className=\"icon\">assignment_ind</span>\n            Request Assignment\n          </button>\n        )\n      case 'Pending Assignment':\n        return (\n          <button \n            className=\"action-btn small secondary\"\n            disabled\n            title=\"Waiting for SWCM assignment\"\n          >\n            <span className=\"icon\">hourglass_empty</span>\n            Pending\n          </button>\n        )\n      case 'Case Setup':\n        return (\n          <button \n            onClick={() => handleStartCaseSetup(case_)}\n            className=\"action-btn small primary\"\n            title={hasSavedProgress(case_.case_id) ? 'Resume case setup progress' : 'Start comprehensive case setup'}\n          >\n            <span className=\"icon\">{hasSavedProgress(case_.case_id) ? 'play_arrow' : 'settings'}</span>\n            {hasSavedProgress(case_.case_id) ? 'Resume Setup' : 'Start Setup'}\n          </button>\n        )\n      case 'Pending Approval':\n        return (\n          <button \n            className=\"action-btn small secondary\"\n            disabled\n            title=\"Case setup complete, awaiting supervisor approval\"\n          >\n            <span className=\"icon\">pending</span>\n            Awaiting Approval\n          </button>\n        )\n      case 'Active':\n      case 'Closed':\n        return (\n          <Link href={`/cases/${case_.case_id}`} className=\"action-btn small primary\">\n            <span className=\"icon\">visibility</span>\n            View\n          </Link>\n        )\n      default:\n        return (\n          <button className=\"action-btn small secondary\" disabled>\n            <span className=\"icon\">help</span>\n            Unknown Status\n          </button>\n        )\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"page-container\">\n        <div className=\"page-header\">\n          <h1 className=\"page-title\">CPW Dashboard</h1>\n          <p className=\"page-description\">Loading cases...</p>\n        </div>\n      </div>\n    )\n  }\n\n  // Create unified task list sorted by due date\n  const createTaskList = () => {\n    const tasks: Array<{\n      id: string\n      type: 'request-assignment' | 'case-setup' | 'edits-required'\n      case: Case\n      dueDate: Date\n    }> = []\n\n    cases.forEach(case_ => {\n      let taskType: 'request-assignment' | 'case-setup' | 'edits-required'\n      let dueDate: Date\n\n      switch (case_.status.toLowerCase()) {\n        case 'draft':\n          taskType = 'request-assignment'\n          // Mock due date: 3 days from intake\n          dueDate = new Date(case_.created_date)\n          dueDate.setDate(dueDate.getDate() + 3)\n          break\n        case 'case setup':\n          taskType = 'case-setup'\n          // Mock due date: 7 days from status change\n          dueDate = new Date(case_.created_date)\n          dueDate.setDate(dueDate.getDate() + 10)\n          break\n        case 'edits required':\n          taskType = 'edits-required'\n          // Mock due date: 2 days from status change (urgent)\n          dueDate = new Date(case_.created_date)\n          dueDate.setDate(dueDate.getDate() + 12)\n          break\n        default:\n          return // Skip cases that don't need tasks\n      }\n\n      tasks.push({\n        id: `${case_.case_id}-${taskType}`,\n        type: taskType,\n        case: case_,\n        dueDate\n      })\n    })\n\n    // Sort by due date (earliest first)\n    return tasks.sort((a, b) => a.dueDate.getTime() - b.dueDate.getTime())\n  }\n\n  const taskList = createTaskList()\n\n  // Filter task list based on search query\n  const filteredTaskList = taskList.filter(task => {\n    if (!searchQuery) return true\n    \n    const searchLower = searchQuery.toLowerCase()\n    const caseName = (task.case.case_display_name || task.case.family_name || '').toLowerCase()\n    const caseNumber = (task.case.case_number || '').toLowerCase()\n    const status = (task.case.status || '').toLowerCase()\n    \n    return caseName.includes(searchLower) || \n           caseNumber.includes(searchLower) || \n           status.includes(searchLower)\n  })\n\n  const getTaskName = (type: string) => {\n    switch (type) {\n      case 'request-assignment': return 'Request SWCM Assignment'\n      case 'case-setup': return 'Complete Case Setup'\n      case 'edits-required': return 'Address Required Edits'\n      default: return 'Unknown Task'\n    }\n  }\n\n  const getTaskIcon = (type: string) => {\n    switch (type) {\n      case 'request-assignment': return 'assignment_ind'\n      case 'case-setup': return 'settings'\n      case 'edits-required': return 'edit'\n      default: return 'task'\n    }\n  }\n\n  const handleTaskAction = (task: any) => {\n    switch (task.type) {\n      case 'request-assignment':\n        handleSetupCase(task.case)\n        break\n      case 'case-setup':\n        handleStartCaseSetup(task.case)\n        break\n      case 'edits-required':\n        console.log('Handle edits required for case:', task.case.case_id)\n        break\n    }\n  }\n\n  const isOverdue = (dueDate: Date) => {\n    return dueDate < new Date()\n  }\n\n  const formatDueDate = (dueDate: Date) => {\n    const today = new Date()\n    const daysDiff = Math.ceil((dueDate.getTime() - today.getTime()) / (1000 * 3600 * 24))\n    \n    if (daysDiff < 0) return `${Math.abs(daysDiff)} days overdue`\n    if (daysDiff === 0) return 'Due today'\n    if (daysDiff === 1) return 'Due tomorrow'\n    return `Due in ${daysDiff} days`\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">My Tasks</h1>\n        <p className=\"page-description\">Complete your assigned tasks in order of priority</p>\n      </div>\n\n      <div className=\"content-wrapper\">\n        {error && (\n          <div className=\"error-message\">\n            <span className=\"icon\">error</span>\n            {error}\n          </div>\n        )}\n\n        {taskList.length > 0 ? (\n          <div className=\"task-table-container\">\n            <div className=\"task-table-header\">\n              <div className=\"search-bar\">\n                <span className=\"search-icon icon\">search</span>\n                <input\n                  type=\"text\"\n                  className=\"search-input\"\n                  placeholder=\"Search for a case or status\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                {searchQuery && (\n                  <button \n                    className=\"clear-search-btn\"\n                    onClick={() => setSearchQuery('')}\n                  >\n                    <span className=\"icon\">close</span>\n                  </button>\n                )}\n              </div>\n              <div className=\"task-table-actions\">\n                <span className=\"task-table-count\">{filteredTaskList.length} of {taskList.length} tasks</span>\n                <button className=\"action-btn secondary\" onClick={loadCases}>\n                  <span className=\"icon\">refresh</span>\n                  Refresh\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"table-container\">\n              <table className=\"data-table task-table\">\n                <thead>\n                  <tr>\n                    <th>Case Name</th>\n                    <th>Case ID</th>\n                    <th>Due Date</th>\n                    <th>Progress</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredTaskList.map((task) => (\n                    <tr \n                      key={task.id} \n                      className={isOverdue(task.dueDate) ? 'urgent' : ''}\n                    >\n                      <td>\n                        <div className=\"case-name-cell\">\n                          <Link href={`/cases/${task.case.case_id}`} className=\"case-link\">\n                            <strong>{task.case.case_display_name || task.case.family_name}</strong>\n                          </Link>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"case-number\">{task.case.case_number}</div>\n                      </td>\n                      <td>\n                        <div className={`due-date-cell ${isOverdue(task.dueDate) ? 'overdue' : ''}`}>\n                          <div className=\"due-date\">{task.dueDate.toLocaleDateString()}</div>\n                          <div className=\"due-status\">{formatDueDate(task.dueDate)}</div>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"progress-cell\">\n                          {task.type === 'case-setup' && (() => {\n                            const progress = getSetupProgress(task.case.case_id)\n                            return (\n                              <div className=\"setup-progress-indicator\">\n                                <div className=\"progress-bar-small\">\n                                  <div \n                                    className=\"progress-fill-small\" \n                                    style={{ width: `${progress.percentage}%` }}\n                                  ></div>\n                                </div>\n                                <div className=\"progress-text-small\">\n                                  {progress.step > 0 ? `Step ${progress.step}/${progress.total}` : 'Not Started'}\n                                </div>\n                              </div>\n                            )\n                          })()}\n                          {task.type !== 'case-setup' && (\n                            <span className=\"progress-na\">—</span>\n                          )}\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"action-buttons\">\n                          {getCaseActionButton(task.case, task.type)}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        ) : (\n          <div className=\"empty-state\">\n            <span className=\"icon large\">check_circle</span>\n            <h3>All Tasks Complete!</h3>\n            <p>You have no pending tasks at this time.</p>\n            <button className=\"action-btn primary\" onClick={loadCases}>\n              <span className=\"icon\">refresh</span>\n              Check for New Tasks\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Request SWCM Assignment Modal */}\n      <RequestSWCMAssignmentModal\n        isOpen={isSetupModalOpen}\n        onClose={handleCloseModal}\n        case_={selectedCase}\n        onSuccess={handleSetupSuccess}\n      />\n\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}